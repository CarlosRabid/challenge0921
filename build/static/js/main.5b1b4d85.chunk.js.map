{"version":3,"sources":["Components/ToolbarMenuIcon.js","Components/ToolbarMenu.js","Components/NavBar.js","Components/CardLanding.js","Components/Landing.js","Components/Login.js","Components/Form/ShiftInput.js","Components/Form/TurtleInput.js","Components/Form/Turtle.js","Components/Form/DateInput.js","Components/Form/NestInput.js","Components/Form/BeachLocations.js","Components/Form/ObservationComments.js","Components/Form/constant.js","Components/Form/Form.js","Components/Spreadsheet/SpreadsheetContainer.js","Components/Spreadsheet/UpdateForm.js","Components/Loader.js","Components/Spreadsheet/SpreadsheetData.js","Components/Spreadsheet/Spreadsheet.js","Components/Analytics/ChartFilters.js","Components/Analytics/DynamicChart.js","Components/Analytics/Analytics.js","Components/Analytics/Chart.js","Components/Analytics/Doughnut.js","App.js","i18n.js","serviceWorker.js","index.js"],"names":["ToolbarMenuIcon","props","handleMenu","event","setState","anchorEl","currentTarget","handleClose","state","bind","render","children","this","result","child","autoclose","push","onClick","key","classes","open","Boolean","className","buttonCollapse","IconButton","style","color","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","autoCloseChildren","React","Component","withStyles","theme","breakpoints","up","display","root","position","right","buttonBar","down","styles","menuButton","marginLeft","marginRight","useState","top","left","bottom","onLogout","logOut","side","toggleDrawer","type","AppBar","background","Drawer","list","role","onKeyDown","List","to","textDecoration","ListItem","button","ListItemIcon","ListItemText","primary","Divider","Toolbar","aria-label","Typography","variant","collapsed","MenuItem","Button","FormControlLabel","control","Switch","checked","lng","onChange","changeLanguage","label","useStyles","makeStyles","card","maxWidth","media","height","padding","CardLanding","Card","CardContent","gutterBottom","component","d","title","description","CardActions","link","size","Landing","user","users","t","isLoggedIn","dataLanding","map","withTranslation","credentials","Robert","Isabelle","Guest1","Guest2","Guest3","Login","handleChange","input","target","value","name","login","userName","password","rememberMe","localStorage","setItem","updateUser","alert","TextField","margin","Checkbox","ShiftInput","handleInput","date","time","handleName","firstName","lastName","moment","format","handleDate","addShift","submitForm","getItem","utils","DateFnsUtils","Grid","container","justify","autoComplete","hiddenLabel","marginTop","toDate","KeyboardButtonProps","InputLabelProps","shrink","width","helperText","TurtleInput","handleDimentions","addTurtleInput","species","gender","condition","status","stage","dimensions","plain","length","curve","markings","rightSide","leftSide","handleClick","anchorStat","a","handleSpecies","handleCondition","conditionstage","handleButton","selected","handleRadioButton","handleGender","conditionstat","dimensionsPl","dimensionsPw","dimensionsCl","dimensionsCw","markingsRs","markingsLs","commentaries","menuItems","caption","subMenuItems","keepMounted","RadioGroup","row","justifyContent","Radio","item","sm","md","ToggleButtonGroup","exclusive","ToggleButton","justifySelf","icon","faHeartbeat","faMedkit","faStar","faStarHalfAlt","faStarHalf","faStarOfLife","faBan","InputLabel","htmlFor","Input","Turtle","updateTurtle","dms","turtleinput","DateInput","daten","timen","handleDaten","NestInput","handleNest","salvageable","eggCount","layTime","hatchEst","rehomed","BeachLocation","idx","currentBeach","beaches","locationLatitude","locationLongitude","selectedBeach","latitude","longitude","handleBeachInput","hideMenu","showMenu","playatoro","playaarenal","playalagarto","FormControl","Select","labelWidth","inputProps","Comments","handleComments","comments","placeholder","multiline","rowsMax","LOCAL_GET","axios","require","dinamicRoute","window","location","host","includes","constant","Form","charAt","first","last","handleShift","handleLab","checkTurtleData","hasTurtle","turtle","Object","keys","some","k","checkNest","hasNest","nest","submitNewForm","shift","observation","form","Date","moonPhase","tide","hasData","navigator","onLine","post","response","console","log","savedForms","JSON","parse","stringify","handleExpandClick","showFpart","showNest","BeachLocations","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","forms","TransitionProps","unmountOnExit","handleTurtInput","backgroundColor","opacity","SpreadsheetContainer","MR","ML","PL","PW","CL","CW","TableRow","TableCell","align","Tooltip","slice","UpdateForm","closePopUp","formId","_id","update","Loader","class","SpreadsheetData","getDataById","data","find","f","showPopUp","showPop","filter","loadingData","get","setTimeout","Paper","Table","stickyHeader","TableHead","stroke","fill","TableBody","Spreadsheet","ChartFilters","removeEmptyFilters","filters","extractFilters","forEach","s","g","e","getRelevantData","createCheckMark","info","getCheckMarks","green","blue","tides","checkmarks","FormGroup","toUpperCase","DynamicChart","convertDate","group","fd","newDate","toMultiply","parseInt","year","Math","floor","ceil","Axios","getMoonphases","newData","splice","countBy","o","dataKey","yAxisId","orientation","strokeWidth","Analytics","App","updateNavBar","i18n","removeItem","then","path","exact","saveForm","resources","en","translation","es","use","initReactI18next","init","keySeparator","interpolation","escapeValue","fallbackOnEmpty","isLocalhost","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5b1b4d85.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Menu } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\r\n\r\nconst styles = theme => ({\r\n  buttonCollapse: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\"\r\n    },\r\n    margin: \"10px\",\r\n    boxShadow: \"none\"\r\n  }\r\n});\r\n\r\nclass ToolbarMenuIcon extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      anchorEl: null\r\n    };\r\n    this.handleMenu = this.handleMenu.bind(this);\r\n  }\r\n  handleMenu = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n  autoCloseChildren(render) {\r\n    const children = this.props.children;\r\n    const result = [];\r\n    for (const child of children) {\r\n      if (child.props.autoclose) {\r\n        result.push(<div onClick={this.handleClose} key={child}>{child}</div>);\r\n      } else {\r\n        result.push(child);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { anchorEl } = this.state;\r\n    const open = Boolean(anchorEl);\r\n\r\n    return (\r\n      <div className={classes.buttonCollapse}>\r\n        <IconButton onClick={this.handleMenu}>\r\n          <ExitToApp style={{color: 'white'}}/>\r\n        </IconButton>\r\n        <Menu\r\n          id=\"menu-appbar\"\r\n          anchorEl={anchorEl}\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\"\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\"\r\n          }}\r\n          open={open}\r\n          onClose={this.handleClose}\r\n        >\r\n          {this.autoCloseChildren()}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(ToolbarMenuIcon);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport ToolbarMenuIcon from \"./ToolbarMenuIcon\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    position: \"absolute\",\r\n    right: 0\r\n  },\r\n  buttonBar: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\"\r\n    },\r\n    margin: \"10px\",\r\n    paddingLeft: \"16px\",\r\n    right: 0,\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    background: \"transparent\"\r\n  }\r\n});\r\n\r\nconst ToolbarMenu = props => (\r\n  <div className={props.classes.root}>\r\n    <ToolbarMenuIcon>{props.render(true)}</ToolbarMenuIcon>\r\n    <div className={props.classes.buttonBar} id=\"toolbar\">\r\n      {props.render(false)}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default withStyles(styles)(ToolbarMenu);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ToolbarMenu from \"./ToolbarMenu\";\r\nimport { Button, MenuItem, List, ListItem, ListItemIcon, ListItemText, Divider, Drawer } from \"@material-ui/core\";\r\nimport { BrowserRouter as Router, Route, Redirect, Link } from 'react-router-dom'; //do NOT delete grayed out\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport PollIcon from '@material-ui/icons/Poll';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FormControlLabel, Switch } from '@material-ui/core';\r\nimport '../styles/NavBar.css';\r\n\r\n\r\nconst styles = {\r\n \r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  }\r\n};\r\n\r\n\r\n\r\nfunction NavBar(props) {\r\n  const classes = styles;\r\n  \r\n\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  function onLogout() {\r\n    props.logOut()\r\n  }\r\n\r\n\r\n  const sideList = side => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n\r\n        <Link to=\"/\" style={{ textDecoration: 'none', color: 'black' }}>\r\n          <ListItem button key=\"home\" >\r\n            <ListItemIcon ><HomeIcon /></ListItemIcon>\r\n            <ListItemText primary=\"Home\" />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <Link to=\"/form\" style={{ textDecoration: 'none', color: 'black' }}>\r\n          <ListItem button key=\"form\" >\r\n            <ListItemIcon ><ListAltIcon /></ListItemIcon>\r\n            <ListItemText primary=\"Form\" />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <Link to=\"/spread\" style={{ textDecoration: 'none', color: 'black' }}>\r\n          <ListItem button key=\"spreadsheet\" >\r\n            <ListItemIcon><StorageIcon /> </ListItemIcon>\r\n            <ListItemText primary=\"Spreadsheet\" />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <Link to=\"/analytics\" style={{ textDecoration: 'none', color: 'black' }}>\r\n          <ListItem button key=\"analytics\" >\r\n            <ListItemIcon><PollIcon /> </ListItemIcon>\r\n            <ListItemText primary=\"Analytics\" />\r\n          </ListItem>\r\n        </Link>\r\n\r\n      </List>\r\n\r\n      <Divider />\r\n\r\n    </div>\r\n  );\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    setState({ ...state, [side]: open });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" style={{ background: \"#166088\" }}>\r\n\r\n        <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\r\n          {sideList('left')}\r\n        </Drawer>\r\n        <Toolbar>\r\n\r\n          <IconButton color=\"inherit\" aria-label=\"Menu\" onClick={toggleDrawer('left', true)}>\r\n            <MenuIcon ></MenuIcon>\r\n          </IconButton>\r\n\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Login Task Challenge 2021\r\n          </Typography>\r\n\r\n         \r\n            <ToolbarMenu\r\n              render={collapsed => {\r\n                return collapsed\r\n                  ? [<MenuItem key=\"logout\" onClick={onLogout} autoclose={true}>\r\n                    Logout\r\n                    </MenuItem>]\r\n                  : [< Button\r\n                    key=\"logout\"\r\n                    color=\"inherit\"\r\n                    onClick={onLogout}\r\n                    className=\"menuButton\"\r\n                  >\r\n                    Logout\r\n                    </Button>];\r\n              }}\r\n\r\n            />\r\n            <div className=\"language-toggle\">\r\n            <FormControlLabel\r\n              control={<Switch checked={(props.lng === \"es\") ? true : false} onChange={props.changeLanguage} />}\r\n              label={(props.lng === \"es\") ? \"English\" : \"Español\"}\r\n            />\r\n            </div>\r\n\r\n        \r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/* Toolbar to add extra space after navbar */}\r\n      <Toolbar />\r\n    </div>\r\n  );\r\n}\r\n\r\nNavBar.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(NavBar);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './landing.css';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    button: {\r\n        padding: 8,\r\n    }\r\n});\r\n\r\nexport default function CardLanding(props) {\r\n    const classes = useStyles();\r\n    // const { t } = props;\r\n\r\n    return (\r\n        <div className=\"individualCardLanding\">\r\n\r\n            <Card className={classes.card}>\r\n            \r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {props.d.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {props.d.description}\r\n                    </Typography>\r\n                </CardContent>\r\n        \r\n                <CardActions>\r\n                    <Link to={props.d.link} style={{ textDecoration: 'none', color: 'black' }}><div className=\"landingButton\">\r\n                        <Button size=\"small\" color=\"default\" variant=\"outlined\">\r\n                            {props.d.button}\r\n                        </Button>\r\n                    </div>\r\n                    </Link>\r\n                </CardActions>\r\n\r\n            </Card>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom' //do not delete Router Route\r\nimport { withTranslation } from 'react-i18next';\r\nimport './landing.css'\r\nimport CardLanding from './CardLanding';\r\n\r\nclass Landing extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            user: {},\r\n            users: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props\r\n        if (!this.props.isLoggedIn()) { return <Redirect to=\"/\" /> }\r\n        let dataLanding = [\r\n            { title: t(\"Form\"), description: t(\"Create a new observation form.\"), link: \"/form\" , button: t(\"Create form\")},\r\n            { title: t(\"Archive\"), description: t(\"Review all available observation forms.\"), link: \"/spread\", button: t(\"View data\") },\r\n            { title: t(\"Analytics\"), description: t(\"Review data analytics and create charts.\"), link: \"/analytics\" , button: t(\"View analytics\")}\r\n        ]\r\n        return (\r\n            <div className=\"landing-container\">\r\n                {dataLanding.map(d => <CardLanding d={d} key={d.link} />)}\r\n\r\n\r\n\r\n                {/* <span className=\"button\">w</span>\r\n                    <span className=\"button\"><button id=\"spreadsheet\" className=\"link\"><Link to=\"/spread\" className=\"links\">{t('Spreadsheet')}</Link></button></span>\r\n                    <span className=\"button\"><button id=\"analytics\" className=\"link\"><Link to=\"/analytics\" className=\"links\">{t('Analytics')}</Link></button></span> */}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withTranslation('translation')(Landing);","import React, { Component } from 'react';\r\nimport Landing from './Landing'; // do NOT delete!\r\nimport Card from '@material-ui/core/Card';\r\nimport './login.css'\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { FormControlLabel, Checkbox } from '@material-ui/core';\r\n\r\nlet credentials = {\r\n    Robert: \"TSDqmaPu\",\r\n    Isabelle: \"ngEyYWTp\",\r\n    Guest1: \"3fv9fZGL\",\r\n    Guest2: \"zwvY5Tjt\",\r\n    Guest3: \"wZXaHrxF\",\r\n}\r\n\r\nclass Login extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            userName: '',\r\n            password: '',\r\n            rememberMe: false,\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const input = event.target\r\n        const value = input.type === 'checkbox' ?\r\n            input.checked :\r\n            input.value;\r\n\r\n        this.setState({ [input.name]: value });\r\n    };\r\n\r\n    login = () => {\r\n        if (this.state.userName && credentials[this.state.userName] === this.state.password) {\r\n            if (this.state.rememberMe) {\r\n                localStorage.setItem('isLoggedIn', true);\r\n            }\r\n            this.props.updateUser(this.state.userName)\r\n        }\r\n        else {\r\n            alert('One of the following was not correct')\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Card className='logincontainer' style={{ maxWidth: 345 }}>\r\n                <CardContent className=\"loginInnerContainer\">\r\n                    <TextField id=\"outlined-name\" label=\"Username\" name=\"userName\" margin=\"normal\" variant=\"outlined\" type=\"string\" value={this.state.userName} onChange={this.handleChange} />\r\n                    <TextField id=\"outlined-name\" type=\"password\" name=\"password\" label=\"Password\" margin=\"normal\" variant=\"outlined\" value={this.state.password} onChange={this.handleChange} />\r\n                </CardContent>\r\n            \r\n                    <div className=\"cardActionsContainer\">\r\n                        <div><FormControlLabel\r\n                            control={<Checkbox value={this.state.rememberMe} checked={this.state.rememberMe} onChange={this.handleChange} color=\"default\" type=\"checkbox\" name=\"rememberMe\" />}\r\n                            label=\"Remember me\" />\r\n                        </div>\r\n                        <div>\r\n                            <button onClick={this.login} className = \"signinButton\"> LOGIN </button>\r\n                        </div>\r\n                    </div>\r\n            </Card>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Login\r\n","import React, { Component } from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { Grid } from '@material-ui/core';\r\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport moment from 'moment';\r\nimport './turtle.css'\r\n\r\nclass ShiftInput extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            firstName: localStorage.getItem('firstName') || \"\",\r\n            lastName: localStorage.getItem('lastName') || \"\",\r\n            date: moment().format('DD/MM/YYYY'),\r\n            time: moment().format('HH:mm')\r\n        }\r\n    }\r\n\r\n    handleInput = (event) => {\r\n        let state = { ...this.state }\r\n        let date = state.date\r\n        let time = state.time\r\n        let props = this.props\r\n        if (event.target) {\r\n            \r\n            this.setState({ [event.target.id]: event.target.value })\r\n            this.props.handleName(this.state.firstName, this.state.lastName)\r\n            \r\n            return \r\n        } else {\r\n            date = moment(event).format('DD/MM/YYYY')\r\n            time = moment(event).format('HH:mm')\r\n            this.setState({ date, time })\r\n            this.props.handleDate(date, time)\r\n            return \r\n        }\r\n    }\r\n    addShift = () => {\r\n        this.props.addShift(this.state.firstName, this.state.lastName, this.state.date)\r\n    }\r\n    submitForm = (ShiftInput) => {\r\n        this.props.submitForm(ShiftInput)\r\n    }\r\n    \r\n    render() {\r\n        const { t } = this.props;\r\n        const height = 38;\r\n        const marginLeft = '5%';\r\n        const heightD = '10%';\r\n        return (\r\n            <div>\r\n                {/* <h4>{t('Shift')}</h4> */}\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                    <Grid container justify=\"space-between\" style={{ marginLeft: '7%' }}>\r\n                        <TextField\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            label={t('Observer First Name')}\r\n                            className=\"ShiftInput\"\r\n                            value={this.state.firstName}\r\n                            onChange={this.handleInput}\r\n                            margin=\"none\"\r\n                            autoComplete=\"on\"\r\n                            style={{ height, marginLeft }}\r\n                        />\r\n                        <TextField\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            label={t('Observer Last Name')}\r\n                            className=\"ShiftInput\"\r\n                            value={this.state.lastName}\r\n                            onChange={this.handleInput}\r\n                            margin=\"none\"\r\n                            autoComplete=\"on\"\r\n                            hiddenLabel={true}\r\n                            style={{ height, marginLeft, marginTop:'3vmin' }}\r\n                        />\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        <div style={{ display: \"inline-flex\" }}>\r\n                            <KeyboardDatePicker\r\n                                margin=\"none\"\r\n                                id=\"date\"\r\n                                label={t('Date of watch')}\r\n                                format=\"dd/mm/yyyy\"\r\n                                value={moment(this.state.date, 'dd/mm/yyyy').toDate()}\r\n                                // defaultValue={this.state.date}\r\n                                onChange={this.handleInput}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': t('Date'),\r\n                                }}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                style={{ height: heightD, marginLeft, width: '42%' }}\r\n                                variant=\"standard\"\r\n                                size=\"small\"\r\n                                helperText={false}\r\n                            // type=\"date\"\r\n\r\n                            />\r\n                            <KeyboardTimePicker\r\n                                margin=\"none\"\r\n                                variant=\"standard\"\r\n                                // id=\"date\"\r\n                                id=\"time\"\r\n                                label={t('Time')}\r\n                                format=\"HH:mm\"\r\n                                // defaultValue=\"15:02\"\r\n                                value={moment(this.state.time, 'HH:mm').toDate()}\r\n                                onChange={this.handleInput}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': t('Time'),\r\n                                }}\r\n                                className=\"dateinput\"\r\n                                style={{ height: heightD, marginLeft, width: '23%' }}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                helperText={false}\r\n                                size=\"small\"\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation('translation')(ShiftInput);","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport '../Form/turtle.css';\r\nimport { Input, InputLabel, TextField } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeartbeat, faMedkit, faStar, faStarHalfAlt, faStarHalf, faGrinStars, faStarOfLife, faBan } from '@fortawesome/free-solid-svg-icons'\r\n// import { green } from '@material-ui/core/colors';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\n// import FormControl from '@material-ui/core/FormControl';\r\n// import FormLabel from '@material-ui/core/FormLabel';\r\n// import RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\n// import RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import HealingIcon from '@material-ui/icons/Healing';\r\n// import Icon from '@material-ui/core/Icon';\r\n\r\n\r\n\r\nclass TurtleInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null,\r\n            anchorStat: null,\r\n            selected: null,\r\n            species: \"\",\r\n            gender: null,\r\n            conditionstat: \"\",\r\n            conditionstage: \"\",\r\n            dimensionsPl: 0,\r\n            dimensionsPw: 0,\r\n            dimensionsCl: 0,\r\n            dimensionsCw: 0,\r\n            markingsRs: \"\",\r\n            markingsLs: \"\",\r\n            commentaries: \"\",\r\n            menuItems: [\r\n                {\r\n                    key: \"alive\",\r\n                    caption: \"Alive\",\r\n                    subMenuItems: [\r\n                        {\r\n                            key: \"aliveh\",\r\n                            caption: \"Alive Healthy\",\r\n                            onClick: () => { }\r\n                        },\r\n                        {\r\n                            key: \"alivei\",\r\n                            caption: \"Alive Injured\",\r\n                            onClick: () => { }\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    key: \"death\",\r\n                    caption: \"Death\",\r\n                    subMenuItems: [\r\n                        {\r\n                            key: \"death1\",\r\n                            caption: \"Death Stage 1\",\r\n                            onClick: () => { }\r\n                        },\r\n                        {\r\n                            key: \"death2\",\r\n                            caption: \"Death Stage 2\",\r\n                            onClick: () => { }\r\n                        },\r\n                        {\r\n                            key: \"death3\",\r\n                            caption: \"Death Stage 3\",\r\n                            onClick: () => { }\r\n                        },\r\n                        {\r\n                            key: \"death4\",\r\n                            caption: \"Death Stage 4\",\r\n                            onClick: () => { }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleInput = (event) => {\r\n        this.setState({ [event.target.id]: event.target.value })\r\n        this.props.handleDimentions(event.target.id, event.target.value )\r\n        let turtlestate = { ...this.state }\r\n    }\r\n    addTurtleInput = () => {\r\n        this.props.addTurtleInput(this.state.species, this.state.gender,\r\n            this.state.condition.status, this.state.condition.stage,\r\n            this.state.dimensions.plain.length, this.state.dimensions.plain.width, this.state.dimensions.curve.length, this.state.dimensions.curve.width,\r\n            this.state.markings.rightSide, this.state.markings.leftSide)\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        let anchorEl = { ...this.state.anchorEl }\r\n        anchorEl = event.currentTarget.id\r\n        return this.setState({ anchorEl })\r\n    };\r\n    handleMenu = (event) => {\r\n        let anchorStat = { ...this.state.anchorStat }\r\n        anchorStat = event.currentTarget.id\r\n        return this.setState({ anchorStat })\r\n    };\r\n    handleClose = async (event) => {\r\n        // setAnchorEl(null);\r\n        // let anchorEl = {...this.state.anchorEl}\r\n        let result = { ...this.state.species }\r\n        result = event.currentTarget.id\r\n\r\n        if (result.length === 2) {\r\n           this.props.handleSpecies(result)\r\n            this.setState({ species: result, anchorEl: null })\r\n            return \r\n\r\n        } else { \r\n            this.props.handleCondition({result})\r\n            return this.setState({ conditionstage: result, anchorStat: null }) }\r\n    };\r\n    handleButton = (event) => {\r\n        let selected = { ...this.state.selected }\r\n        selected = event.currentTarget.id\r\n        this.props.handleCondition(selected)\r\n        this.setState({ selected })\r\n    };\r\n\r\n    handleRadioButton = event => {\r\n        let gender = { ...this.state.gender };\r\n        gender = event.currentTarget.value\r\n        this.props.handleGender(gender)\r\n        this.setState({ gender });\r\n    };\r\n\r\n\r\n    // there is className = \"child-turtle\" for nested children to help with the CSS\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n\r\n        return (\r\n            <div className=\"turtle-container\" >\r\n                <Button size=\"medium\" id=\"species\"\r\n                    variant=\"outlined\" color=\"inherit\"\r\n                    className=\"observation\" onClick={this.handleClick}\r\n                    style={{ marginLeft: '16%' }}\r\n                >\r\n                    {this.state.species ? `Species: ${this.state.species}` : t('Select Species')}\r\n                </Button>\r\n                <Menu\r\n                    anchorEl={this.state.anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(this.state.anchorEl)}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <MenuItem onClick={this.handleClose} name=\"species\" id=\"Cc\" >Caretta caretta</MenuItem>\r\n                    <MenuItem onClick={this.handleClose} name=\"species\" id=\"Lo\">Lepidochelys olivacea</MenuItem>\r\n                    <MenuItem onClick={this.handleClose} name=\"species\" id=\"Cm\">Chelonia mydas</MenuItem>\r\n                    <MenuItem onClick={this.handleClose} name=\"species\" id=\"Ei\">Eretmochelys imbricata</MenuItem>\r\n                    <MenuItem onClick={this.handleClose} name=\"species\" id=\"Dc\">Dermochelys coriacea</MenuItem>\r\n                </Menu>\r\n                <br />\r\n                <RadioGroup row aria-label=\"Gender\" name=\"gender2\" value={this.state.gender} onChange={this.handleRadioButton} style={{ justifyContent: 'center', marginTop: '2%' }}><FormControlLabel\r\n                    display=\"block\"\r\n                    value=\"female\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label= {t('Female')}\r\n                    // labelPlacement=\"start\"\r\n                    id=\"female\"\r\n                />\r\n                    <FormControlLabel\r\n                        display=\"block\"\r\n                        value=\"male\"\r\n                        control={<Radio color=\"secondary\" />}\r\n                        label={t('Male')}\r\n                        // labelPlacement=\"start\"\r\n                        id=\"male\"\r\n                    />\r\n                </RadioGroup>\r\n                <Grid item sm={12} md={6}>\r\n                    {t('Found alive')} :\r\n                    <ToggleButtonGroup\r\n                        value={this.state.selected}\r\n                        exclusive\r\n                        onChange={this.handleButton}\r\n                        aria-label=\"Alive\"\r\n                        style={{ justifyContent: \"center\" }}\r\n                    >\r\n                        <ToggleButton id=\"alv1\" value=\"alv1\" aria-label=\"Alive - Healthy\"\r\n                            style={{ height: '6vh', justifySelf: \"center\", marginLeft: '51%' }}>\r\n                            <FontAwesomeIcon icon={faHeartbeat} />\r\n                        </ToggleButton>\r\n                        <ToggleButton id=\"alv2\" value=\"alv2\" \r\n                        style={{ height: '6vh', justifySelf: \"center\" }} \r\n                        color=\"secondary\" aria-label=\"Alive - Injured\">\r\n                            <FontAwesomeIcon icon={faMedkit} />\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                    <br />\r\n                    {t('Found dead')} :\r\n                 <ToggleButtonGroup\r\n                        value={this.state.selected}\r\n                        exclusive\r\n                        onChange={this.handleButton}\r\n                        aria-label=\"Deceased\"\r\n                        style={{ justifyContent: \"center\" }}\r\n                    >\r\n                        <ToggleButton id=\"dea1\" value=\"dea1\" aria-label=\"death1\"\r\n                            style={{ height: '6vh', justifySelf: \"center\", marginLeft: '16%' }}\r\n                        >\r\n                            <FontAwesomeIcon icon={faStar} />\r\n                        </ToggleButton>\r\n                        <ToggleButton id=\"dea2\" value={'dea2'}\r\n                            style={{ height: '6vh', justifySelf: \"center\" }}\r\n                            color=\"secondary\" aria-label=\"death2\">\r\n                            <FontAwesomeIcon icon={faStarHalfAlt} />\r\n                        </ToggleButton>\r\n                        <ToggleButton id=\"dea3\" value='dea3' aria-label=\"death3\"\r\n                            style={{ height: '6vh', justifySelf: \"center\" }}\r\n                            color=\"secondary\"\r\n                        >\r\n                            <FontAwesomeIcon icon={faStarHalf} />\r\n                        </ToggleButton>\r\n                        <ToggleButton id=\"dea4\" value='dea4' aria-label=\"death4\"\r\n                            style={{ height: '6vh', justifySelf: \"center\" }}\r\n                            color=\"secondary\"\r\n                        >\r\n                            <FontAwesomeIcon icon={faStarOfLife} />\r\n                        </ToggleButton>\r\n                        <ToggleButton id=\"dea5\" value='dea5' aria-label=\"death5\"\r\n                            style={{ height: '6vh', justifySelf: \"center\" }}\r\n                            color=\"secondary\"\r\n                        >\r\n                            <FontAwesomeIcon icon={faBan} />\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </Grid>\r\n                \r\n                {/* <div className=\"child-turtle\">\r\n                                 <span className=\"new-turtle-1\"> Length: </span>\r\n                                 <Input\r\n                                 id=\"dimensionsPl\"\r\n                                 value={this.state.dimensionsPl}\r\n                                 onChange={this.handleInput}\r\n                                 endAdornment={<InputAdornment position=\"end\">mts</InputAdornment>}\r\n                                 aria-describedby=\"measure-helper-text\"\r\n                                 inputProps={{\r\n                                     'aria-label': 'measure',\r\n                                 }}\r\n                                 />\r\n                             </div>  */}\r\n                <br />\r\n                {t('Measurements in cm')}\r\n                <br />\r\n                <br />\r\n                <div className=\"dimensions\">\r\n                    <div className=\"turtle-dimensions\" >\r\n                        {t('Straight measurement')}\r\n                        <br />\r\n                        <TextField\r\n                            value={this.state.dimensionsPl}\r\n                            onChange={this.handleInput}\r\n                            label= {t('Length')}\r\n                            id=\"dimensionsPl\"\r\n                            className=\"turtle\"\r\n                            size=\"small\"\r\n                            style={{ width: '33%', marginLeft: '5%' }}\r\n                        // InputProps={{\r\n                        //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\r\n                        // }}\r\n                        />\r\n                        <TextField\r\n                            value={this.state.dimensionsPw}\r\n                            onChange={this.handleInput}\r\n                            label={t('Width')}\r\n                            id=\"dimensionsPw\"\r\n                            className=\"turtle\"\r\n                            size=\"small\"\r\n                            style={{ width: '33%', marginLeft: '5%' }}\r\n                        // InputProps={{\r\n                        //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\r\n                        // }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"turtle-dimensions\" >\r\n                    {t('Curve measurement')}\r\n                        <br />\r\n                        <TextField\r\n                            value={this.state.dimensionsCl}\r\n                            onChange={this.handleInput}\r\n                            label={t('Length')}\r\n                            id=\"dimensionsCl\"\r\n                            className=\"turtle\"\r\n                            size=\"small\"\r\n                            style={{ width: '33%', marginLeft: '4%' }}\r\n                        // InputProps={{\r\n                        //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\r\n                        // }}\r\n                        />\r\n                        <TextField\r\n                            value={this.state.dimensionsCw}\r\n                            onChange={this.handleInput}\r\n                            label={t('Width')}\r\n                            id=\"dimensionsCw\"\r\n                            className=\"turtle\"\r\n                            size=\"small\"\r\n                            style={{ width: '33%', marginLeft: '4%' }}\r\n                        // InputProps={{\r\n                        //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\r\n                        // }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"markings\">\r\n                {t('Marks on the shell')}\r\n                    <InputLabel htmlFor=\"component-simple\">{t('Right Side')}: </InputLabel>\r\n                    <Input id=\"markingsRs\" value={this.state.markingsRs} onChange={this.handleInput} />\r\n                    <InputLabel htmlFor=\"component-simple\">{t('Left Side')}: </InputLabel>\r\n                    <Input id=\"markingsLs\" value={this.state.markingsLs} onChange={this.handleInput} />\r\n                </div>\r\n                <br />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withTranslation('translation')(TurtleInput);","import React, { Component } from 'react';\r\nimport TurtleInput from './TurtleInput';\r\n\r\nclass Turtle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            turtleinput: {},\r\n            species: \"\",\r\n            gender: null,\r\n            conditionstat: \"\",\r\n            conditionstage: \"\",\r\n            dimensionsPl: 0,\r\n            dimensionsPw: 0,\r\n            dimensionsCl: 0,\r\n            dimensionsCw: 0,\r\n            markingsRs: \"\",\r\n            markingsLs: \"\",\r\n            // gender: \"\",\r\n            // condition:\r\n            // {\r\n            //     status: \"\",\r\n            //     stage: \"\"\r\n            // },\r\n            // dimensions: {\r\n            //     plain: {\r\n            //         length: \"\",\r\n            //         width: \"\"\r\n            //     },\r\n            //     curve: {\r\n            //         length: \"\",\r\n            //         width: \"\"\r\n            //     }\r\n            // },\r\n            // markings: {\r\n            //     rightSide: \"\",\r\n            //     leftSide: \"\"\r\n            // }\r\n        }\r\n    }\r\n    updateTurtle = (dms) => {\r\n        // let state = {...this.state.turtleinput}\r\n        this.setState({turtleinput: dms })\r\n    }\r\n\r\n\r\n    render() { \r\n        return (\r\n            <TurtleInput handleGender={this.props.handleGender} handleCondition={this.props.handleCondition} handleSpecies={this.props.handleSpecies} updateTurtle={this.updateTurtle} \r\n            handleDimentions= {this.props.handleDimentions}/>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Turtle;","import React, { Component } from 'react';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { Grid } from '@material-ui/core';\r\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\r\n// import TextField from '@material-ui/core/TextField';\r\nimport moment from 'moment';\r\n\r\nclass DateInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            daten: moment().format('DD/MM/YYYY'),\r\n            timen: moment().format('HH:mm')\r\n        }\r\n    }\r\n    // handleNest\r\n\r\n    handleInput = (event) => {\r\n        let state = { ...this.state }\r\n        let daten = state.daten\r\n        let timen = state.timen\r\n        daten = moment(event).format('DD/MM/YYYY')\r\n        timen = moment(event).format('HH:mm')\r\n        this.setState({ daten, timen })\r\n        this.props.handleDaten(daten)\r\n\r\n\r\n    }\r\n    render() {\r\n        const { t } = this.props;\r\n        // const height = 38;\r\n        const marginLeft = '5%';\r\n        const heightD = '10%';\r\n        return <>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                <Grid container justify=\"space-between\" style={{ marginLeft: '7%' }}>\r\n                    <div style={{ display: \"inline-flex\" }}>\r\n                        <KeyboardDatePicker\r\n                            margin=\"none\"\r\n                            id=\"date\"\r\n                            label={t('Date of watch')}\r\n                            format=\"dd/mm/yyyy\"\r\n                            value={moment(this.state.daten, 'dd/mm/yyyy').toDate()}\r\n                            // defaultValue={this.state.date}\r\n                            onChange={this.handleInput}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': t('Date'),\r\n                            }}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            style={{ height: heightD, marginLeft, width: '42%' }}\r\n                            variant=\"standard\"\r\n                            size=\"small\"\r\n                            helperText={false}\r\n                        // type=\"date\"\r\n\r\n                        />\r\n                        <KeyboardTimePicker\r\n                            margin=\"none\"\r\n                            variant=\"standard\"\r\n                            // id=\"date\"\r\n                            id=\"time\"\r\n                            label={t('Time ')}\r\n                            format=\"HH:mm\"\r\n                            // defaultValue=\"15:02\"\r\n                            value={moment(this.state.timen, 'HH:mm').toDate()}\r\n                            onChange={this.handleInput}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': t('Time'),\r\n                            }}\r\n                            className=\"dateinput\"\r\n                            style={{ height: heightD, marginLeft, width: '23%' }}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            helperText={false}\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n            </MuiPickersUtilsProvider>\r\n        </>\r\n    }\r\n}\r\nexport default withTranslation('translation')(DateInput);","import React, { Component } from 'react';\r\nimport DateInput from './DateInput';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport { TextField } from '@material-ui/core';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { withTranslation } from 'react-i18next';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import FormControl from '@material-ui/core/FormControl';\r\n// import FormLabel from '@material-ui/core/FormLabel';\r\n\r\nclass NestInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            eggCount: \"\",\r\n            layTime: \"\",\r\n            hatchEst: \"\",\r\n            rehomed: \"\",\r\n            salvageable: \"\",\r\n            daten: \"\",\r\n            timen: \"\"\r\n\r\n        }\r\n    }\r\n\r\n    handleInput = async (event) => {\r\n        await this.setState({ [event.target.name]: event.target.value })\r\n        return this.props.handleNest(this.state)\r\n    }\r\n    handleDaten= async (input) => {\r\n        let daten = {...this.state.daten}\r\n        daten = input\r\n        await this.setState({ daten })\r\n        return this.props.handleNest(daten)\r\n    }\r\n    handleRadioButton = async (event) => {\r\n        let salvageable = { ...this.state.salvageable };\r\n        salvageable = event.currentTarget.value\r\n        \r\n        await this.setState({ salvageable });\r\n        return this.props.handleNest(this.state)\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n\r\n        return <>\r\n            {/* <div className=\"new-nest-grid\">\r\n                    <span className=\"new-nest-1\"> Number of eggs: </span>\r\n                    <input className=\"searchInput underline new-nest-2\"\r\n                        name=\"eggCount\" onChange={this.handleInput}></input>\r\n\r\n                </div> */}\r\n            <TextField\r\n                value={this.state.eggCount}\r\n                onChange={this.handleInput}\r\n                name=\"eggCount\"\r\n                label={t('Number of eggs')}\r\n                id=\"eggCount\"\r\n                className=\"searchInput\"\r\n                size=\"small\"\r\n                style={{ width: '33%', marginLeft: '5%' }}\r\n            // InputProps={{\r\n            //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\r\n            // }}\r\n            />\r\n            <div className=\"new-nest-grid\">\r\n                <span className=\"new-nest-1\"> {t('Estimated laying time')}: </span>\r\n                {/* <form>\r\n                        <label>\r\n                            Date:\r\n                            <input type=\"date\" name=\"layTime\" value={this.state.layTime} onChange={this.handleInput} /></label>\r\n                    </form> */}\r\n                <DateInput handleDaten={this.handleDaten} />\r\n            </div>\r\n            <div className=\"new-nest-grid\">\r\n                <span className=\"new-nest-1\"> {t('Estimated hatching time')}: </span>\r\n                {/* <form>\r\n                        <label>\r\n                        Date:\r\n                        <input type=\"date\" name=\"hatchEst\" value={this.state.hatchEst} onChange={this.handleInput} /></label>\r\n                    </form> */}\r\n                <DateInput handleDaten={this.handleDaten} />\r\n            </div>\r\n            <div className=\"new-nest-grid\" >\r\n                <span className=\"new-nest-1\"> {t('Taken to lab')}: </span>\r\n                <RadioGroup row aria-label=\"Lab\" name=\"nestlab\" \r\n                value={this.state.salvageable} onChange={this.handleRadioButton} \r\n                style={{ justifyContent: 'center', marginTop: '2%' }}><FormControlLabel\r\n                    display=\"block\"\r\n                    value=\"yes\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={t('Yes')}\r\n                    // labelPlacement=\"start\"\r\n                    id=\"yes\"\r\n                />\r\n                    <FormControlLabel\r\n                        display=\"block\"\r\n                        value=\"no\"\r\n                        control={<Radio color=\"secondary\" />}\r\n                        label=\"No\"\r\n                        // labelPlacement=\"start\"\r\n                        id=\"no\"\r\n                    />\r\n                </RadioGroup>\r\n            </div>\r\n        </>\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default withTranslation('translation')(NestInput);\r\n","import React, { Component } from 'react';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport { withTranslation } from 'react-i18next';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport './form.css';\r\n\r\n\r\nclass BeachLocation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            locationLatitude: \"\",  // set-up by beach selection\r\n            locationLongitude: \"\", // set-up by beach selection\r\n            showMenu: false,\r\n            selectedBeach: \"\"\r\n        }\r\n\r\n        this.beaches = {\r\n            playatoro: {\r\n                name: \"Playa El Toro\",\r\n                latitude: 7.530178,\r\n                longitude: -80.003034\r\n            },\r\n            playaarenal: {\r\n                name: \"Playa El Arenal\",\r\n                latitude: 7.559493,\r\n                longitude: -80.019275\r\n            },\r\n            playalagarto: {\r\n                name: \"Playa Lagarto\",\r\n                latitude: 7.506391,\r\n                longitude: -79.999284\r\n            }\r\n        }\r\n    }\r\n    handleClose = async (event) => {\r\n        let idx = event.target.value\r\n        if (idx) {\r\n            let currentBeach = this.beaches[idx]\r\n            let locationLatitude = { ...this.state.locationLatitude }\r\n            let locationLongitude = { ...this.state.locationLongitude }\r\n            let selectedBeach = { ...this.state.selectedBeach }\r\n            locationLatitude = currentBeach.latitude\r\n            locationLongitude = currentBeach.longitude\r\n            selectedBeach = currentBeach.name\r\n           await this.props.handleBeachInput({ locationLatitude, locationLongitude, selectedBeach })\r\n            this.setState({\r\n                locationLatitude, locationLongitude, selectedBeach\r\n            })\r\n            this.hideMenu()\r\n        } else { return this.hideMenu() }\r\n    }\r\n    showMenu = () => {\r\n        this.setState({ showMenu: true })\r\n    }\r\n    hideMenu = async () => {\r\n        let showMenu = { ...this.state.showMenu }\r\n        showMenu = null\r\n        await this.setState({ showMenu })\r\n    }\r\n    render() {\r\n        const { t } = this.props;\r\n        return (\r\n            <>\r\n            <div id=\"menuplaya\">\r\n                    <FormControl variant=\"outlined\" value={this.state.selectedBeach}  >\r\n                        <InputLabel  style={{color:\"white\"}} \r\n                        htmlFor='menuplayascont' >   {this.state.selectedBeach ? \r\n                            this.state.selectedBeach : t('Beach') }  \r\n                        </InputLabel>\r\n                        <Select value={this.state.selectedBeach} labelWidth={60} \r\n                            inputProps={{ name: 'playa', id: 'menuplayascont', }}\r\n                            onChange={this.handleClose} \r\n                            // color=\"white\"\r\n\r\n                            >\r\n                            <option value={null} > - </option>\r\n                            <option value=\"playaarenal\" onClick={this.handleClose}>{t('Arenal beach')}</option>\r\n                            <option value=\"playatoro\" onClick={this.handleClose}>{t('El Toro beach')}</option>\r\n                            <option value=\"playalagarto\" onClick={this.handleClose}>{t('Lagarto beach')}</option>\r\n                        </Select>\r\n                    </FormControl>\r\n                    </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default withTranslation('translation')(BeachLocation);","import React, { Component } from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { TextField } from '@material-ui/core';\r\nimport './form.css'\r\nimport Typography from 'material-ui/styles/typography';\r\n\r\nclass Comments extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            comments: \"\" //free input\r\n\r\n        }\r\n    }\r\n    handleInput = (event) => {\r\n        return this.props.handleComments(event.target.value)\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        return <div id=\"comments\">\r\n            {/* <Typography variant=\"h6\" component=\"h6\"></Typography> */}\r\n            <TextField\r\n                id=\"commentaries\"\r\n                name=\"comments\"\r\n                label={t('Comments')}\r\n                style={{ marginLeft: '1vw', color: 'white' }}\r\n                placeholder={t('Add notes...')}\r\n                // helperText=\"Full width!\"\r\n                multiline\r\n                rowsMax=\"2\"\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                    style: {\r\n                        color: 'white'\r\n                    }\r\n                }}\r\n                variant=\"outlined\"\r\n                onChange={this.handleInput}\r\n                color='#ffffff'\r\n            />\r\n\r\n        </div>\r\n    }\r\n}\r\nexport default withTranslation('translation')(Comments);","export const LOCAL_GET = 'http://localhost:7777'\r\nexport const PROD_GET = ''","import React, { Component } from 'react';\r\nimport ShiftInput from './ShiftInput';\r\nimport Turtle from './Turtle';\r\nimport NestInput from './NestInput';\r\nimport Button from '@material-ui/core/Button';\r\nimport './form.css';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { Typography } from '@material-ui/core';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSave } from '@fortawesome/free-solid-svg-icons'\r\nimport BeachLocations from './BeachLocations';\r\nimport Comments from './ObservationComments';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as constant from './constant'\r\n\r\nconst axios = require('axios');\r\n\r\nconst dinamicRoute = (\r\n    window.location.host.includes(\"localhost\") ?\r\n        constant.LOCAL_GET : constant.PROD_GET\r\n)\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            locationLatitude: \"\",  // set-up by beach selection\r\n            locationLongitude: \"\", // set-up by beach selection\r\n            selectedBeach: \"\",\r\n            firstName: null,\r\n            lastName: null,\r\n            date: null,\r\n            time: \"\",\r\n            species: null,\r\n            gender: null,\r\n            conditionstat: null,\r\n            conditionstage: null,\r\n            dimensionsPl: null,\r\n            dimensionsPw: null,\r\n            dimensionsCl: null,\r\n            dimensionsCw: null,\r\n            markingsRs: null,\r\n            markingsLs: null,\r\n            comments: \"\",\r\n            showNest: null,\r\n            showFpart: false,\r\n            hasTurtle: null,\r\n            hasNest: null,\r\n            eggCount: null,\r\n            layTime: null,\r\n            hatchEst: null,\r\n            rehomed: null,\r\n            salvageable: null,\r\n            daten: null,\r\n            timen: null,\r\n        }\r\n    }\r\n\r\n    handleBeachInput = async (input) => {\r\n        let locationLatitude = { ...this.state.locationLatitude }\r\n        let locationLongitude = { ...this.state.locationLongitude }\r\n        let selectedBeach = { ...this.state.selectedBeach }\r\n        locationLatitude = input.locationLatitude\r\n        locationLongitude = input.locationLongitude\r\n        selectedBeach = input.selectedBeach\r\n        await this.setState({ locationLatitude, locationLongitude, selectedBeach })\r\n    }\r\n    handleSpecies = async (input) => {\r\n        let species = { ...this.state.species }\r\n        species = input\r\n        await this.setState({ species })\r\n    }\r\n    handleCondition = async (input) => {\r\n        let conditionstage = { ...this.state.conditionstage }\r\n        let conditionstat = { ...this.state.conditionstat }\r\n        conditionstage = input\r\n        conditionstat = (input.charAt(0) == \"a\") ? 'Alive' : 'Death'\r\n        await this.setState({ conditionstage, conditionstat })\r\n    }\r\n    handleName = async (first, last) => {\r\n        let firstName = { ...this.state.firstName }\r\n        let lastName = { ...this.state.lastName }\r\n        firstName = first\r\n        lastName = last\r\n        await this.setState({ firstName, lastName })\r\n        localStorage.setItem('firstName', this.state.firstName)\r\n        localStorage.setItem('lastName', this.state.lastName)\r\n    }\r\n\r\n    handleDimentions = async (id, value) => {\r\n        let key = id\r\n\r\n        await this.setState({ [key]: value })\r\n    }\r\n\r\n    handleDate = async (first, last) => {\r\n        let date = { ...this.state.date }\r\n        let time = { ...this.state.time }\r\n        date = first\r\n        time = last\r\n        await this.setState({ date, time })\r\n    }\r\n    handleShift = async (input) => {\r\n        let firstName = { ...this.state.firstName }\r\n        let lastName = { ...this.state.lastName }\r\n        let date = { ...this.state.date }\r\n        let time = { ...this.state.time }\r\n        firstName = input.firstName\r\n        lastName = input.lastName\r\n        date = input.date\r\n        time = input.time\r\n        await this.setState({ firstName, lastName, date, time })\r\n    }\r\n    handleNest = async (input) => {\r\n        let eggCount = { ...this.state.eggCount }\r\n        let layTime = { ...this.state.layTime }\r\n        let hatchEst = { ...this.state.hatchEst }\r\n        let rehomed = { ...this.state.rehomed }\r\n        let salvageable = { ...this.state.salvageable }\r\n        let daten = { ...this.state.daten }\r\n        let timen = { ...this.state.timen }\r\n        eggCount = input.eggCount\r\n        layTime = input.layTime\r\n        hatchEst = input.hatchEst\r\n        rehomed = input.rehomed\r\n        salvageable = input.salvageable\r\n        daten = input.daten\r\n        timen = input.timen\r\n        await this.setState({ eggCount, layTime, hatchEst, rehomed, salvageable, daten, timen })\r\n    }\r\n    handleLab = (input) => {\r\n        let salvageable = { ...this.state.salvageable }\r\n        salvageable = input.salvageable\r\n        this.setState({ salvageable })\r\n    }\r\n\r\n    checkTurtleData = () => {\r\n        let hasTurtle = { ...this.state.hasTurtle }\r\n        let turtle = {\r\n            species: this.state.species, gender: this.state.gender,\r\n            conditionstat: this.state.conditionstat,\r\n            conditionstage: this.state.conditionstage,\r\n            dimensionsPl: this.state.dimensionsPl,\r\n            dimensionsPw: this.state.dimensionsPw,\r\n            dimensionsCl: this.state.dimensionsCl,\r\n            dimensionsCw: this.state.dimensionsCw,\r\n            markingsRs: this.state.markingsRs,\r\n            markingsLs: this.state.markingsLs,\r\n        }\r\n\r\n        hasTurtle = Object.keys(turtle).some(function (k) {\r\n            return turtle[k] !== null\r\n        })\r\n\r\n        this.setState({\r\n            hasTurtle\r\n        })\r\n    }\r\n    checkNest = () => {\r\n        let hasNest = { ...this.state.hasNest }\r\n        let nest = {\r\n            eggCount: this.state.eggCount,\r\n            layTime: this.state.layTime,\r\n            hatchEst: this.state.hatchEst,\r\n            rehomed: this.state.rehomed,\r\n            salvageable: this.state.salvageable,\r\n            layTime: this.state.daten,\r\n        }\r\n\r\n        hasNest = Object.keys(nest).some(function (k) {\r\n            return nest[k] !== null\r\n        })\r\n\r\n        this.setState({\r\n            hasNest\r\n        })\r\n    }\r\n\r\n    handleGender = (input) => {\r\n        let gender = { ...this.state.gender }\r\n        gender = input\r\n        this.setState({\r\n            gender\r\n        })\r\n    }\r\n\r\n    handleComments = (input) => {\r\n        let comments = { ...this.state.comments }\r\n        comments = input\r\n        this.setState({\r\n            comments\r\n        })\r\n    }\r\n\r\n    submitNewForm = async (shift, observation, turtle, nest) => {\r\n        await this.checkTurtleData()\r\n        await this.checkNest()\r\n\r\n        const firstName = this.state.firstName || localStorage.getItem(\"firstName\")\r\n        const lastName = this.state.lastName || localStorage.getItem(\"lastName\")\r\n\r\n        if(!(firstName && lastName)){\r\n            return alert (\"Please enter your first and last name\")\r\n        }\r\n\r\n        if(!this.state.selectedBeach){\r\n            return alert(\"Please select a beach\")\r\n        }\r\n\r\n        let form = {\r\n            shift: { firstName, lastName },\r\n            observation:\r\n            {\r\n                date: Date(this.state.date),\r\n                location: this.state.selectedBeach,\r\n                moonPhase: 'First Quarter',\r\n                tide: 'low-to-high',\r\n                comments: this.state.comments\r\n            },\r\n            turtle:\r\n            {\r\n                condition: { status: this.state.conditionstat, stage: this.state.conditionstage },\r\n                dimensions: { plain: { length: this.state.dimensionsPl, width: this.state.dimensionsPw }, curve: { length: this.state.dimensionsCl, width: this.state.dimensionsCw } },\r\n                markings: { rightSide: this.state.markingsRs, leftSide: this.state.markingsLs },\r\n                hasData: this.state.hasTurtle,\r\n                species: this.state.species,\r\n                gender: this.state.gender\r\n            },\r\n            nest:\r\n            {\r\n                hasData: this.state.hasNest,\r\n                layTime: this.state.daten,\r\n                eggCount: this.state.eggCount,\r\n                hatchEst: this.state.daten,\r\n                rehomed: this.state.rehomed,\r\n                salvageable: this.state.salvageable\r\n            },\r\n        }\r\n        if(navigator.onLine) {\r\n            const response = await axios.post(`${dinamicRoute}/mega-form`,  form )\r\n            console.log(response)\r\n            console.log('new form saved!')\r\n            alert('Successfully submitted')\r\n        }\r\n        else {\r\n            let savedForms = JSON.parse(localStorage.getItem(\"savedForms\") || \"[]\")\r\n            savedForms.push(form)\r\n            localStorage.setItem('savedForms', JSON.stringify(savedForms))\r\n            console.log(\"Saved form locally for later post\")\r\n            alert('Cannot submit, will try again later')\r\n        }\r\n    }\r\n\r\n    handleExpandClick = (event) => {\r\n        let showFpart = true\r\n        this.setState({ showFpart: showFpart })\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n\r\n        if (!this.props.isLoggedIn()) { return <Redirect to=\"/\" /> }\r\n\r\n        return (\r\n\r\n            <div id=\"formContainer\" >\r\n                <h1>{t('TORTUGA WATCH FORM')}</h1>\r\n                <div id=\"beachButton\" >\r\n                    <BeachLocations handleBeachInput={this.handleBeachInput} />\r\n                </div>\r\n                <br />\r\n                <ExpansionPanel  className=\"shift\" >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"shift\"\r\n                    // style={{border: '10px'}}\r\n\r\n                    >\r\n                        <div className=\"helptext\">\r\n                            <Typography className=\"Shift\" variant=\"h6\" component=\"h6\">{t('Shift')}</Typography>\r\n                        </div>\r\n                    </ExpansionPanelSummary>\r\n                    <ShiftInput forms={this.state.forms} handleName={this.handleName} handleDate={this.handleDate} />\r\n                    <br />\r\n                </ExpansionPanel>\r\n                <ExpansionPanel TransitionProps={{ unmountOnExit: true }}>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"turtles\"\r\n                    >\r\n                        <div className=\"helptext\">\r\n                            <Typography className=\"turtles\" variant=\"h6\" component=\"h6\">{t('Turtle Information')}</Typography>\r\n                        </div>\r\n                    </ExpansionPanelSummary>\r\n                    <Turtle handleGender={this.handleGender} handleCondition={this.handleCondition} handleSpecies={this.handleSpecies} forms={this.state.forms} handleTurtInput={this.state.handleTurtInput}\r\n                        handleDimentions={this.handleDimentions} />\r\n                </ExpansionPanel>\r\n                <ExpansionPanel TransitionProps={{ unmountOnExit: true }}>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"turtles\"\r\n                    >\r\n                        <div className=\"helptext\">\r\n                            <Typography className=\"nests\" variant=\"h6\" component=\"h6\">{t('Nest Information')}</Typography>\r\n                        </div>\r\n                    </ExpansionPanelSummary>\r\n                    <NestInput forms={this.state.forms} handleNest={this.handleNest} />\r\n                </ExpansionPanel>\r\n                <Comments handleComments={this.handleComments} />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{ backgroundColor: '#09bc8a', opacity: 0.9, marginLeft: '0.2em', marginTop: '0.1em' }}\r\n                    size=\"medium\"\r\n                    className=\"submit\"\r\n                    onClick={this.submitNewForm}\r\n                    margin=\"normal\"\r\n                >\r\n                    {t(' Submit ')}\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withTranslation('translation')(Form);","import React, { Component } from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n// import TableHead from '@material-ui/core/TableHead';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { withTranslation } from 'react-i18next'\r\nconst moment = require('moment');\r\n\r\n\r\nclass SpreadsheetContainer extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        let form = this.props.form\r\n\r\n\r\n        let gender = form.turtle.gender\r\n        if (gender) {\r\n            gender = gender === \"male\" ? \"M\" : \"F\"\r\n        }\r\n        else {\r\n            gender = \"-\"\r\n        }\r\n\r\n        let rehomed = form.nest.rehomed\r\n        if (rehomed) {\r\n            rehomed = rehomed === \"yes\" ? \"√\" : \"X\"\r\n        }\r\n        else {\r\n            rehomed = \"-\"\r\n        }\r\n\r\n        let salvageable = form.nest.salvageable\r\n        if (salvageable) {\r\n            salvageable = salvageable === \"yes\" ? \"√\" : \"X\"\r\n        }\r\n        else {\r\n            salvageable = \"-\"\r\n        }\r\n\r\n        let MR = form.turtle.markings.rightSide\r\n        if (!MR) {\r\n            MR = \"-\"\r\n        }\r\n\r\n        let ML = form.turtle.markings.leftSide\r\n        if (!ML) {\r\n            ML = \"-\"\r\n        }\r\n\r\n        let status = form.turtle.condition.status\r\n\r\n        if (!status) {\r\n            status = \"-\"\r\n        }\r\n\r\n        let stage = form.turtle.condition.stage\r\n        if (!stage) {\r\n            stage = \"-\"\r\n        }\r\n\r\n        let PL = form.turtle.dimensions.plain.length\r\n        if (!PL) {\r\n            PL = \"-\"\r\n        }\r\n\r\n        let PW = form.turtle.dimensions.plain.width\r\n        if (!PW) {\r\n            PW = \"-\"\r\n        }\r\n\r\n        let CL = form.turtle.dimensions.curve.length\r\n        if (!CL) {\r\n            CL = \"-\"\r\n        }\r\n        let CW = form.turtle.dimensions.curve.width\r\n        if (!CW) {\r\n            CW = \"-\"\r\n        }\r\n        \r\n\r\n        \r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n\r\n\r\n            <TableRow>\r\n                <TableCell align=\"center\">{moment(form.shift.date).format(\"L\")}</TableCell>\r\n                <TableCell align=\"center\">{form.observation.location}</TableCell>\r\n                <TableCell align=\"center\">{form.shift.lastName}</TableCell>\r\n                <TableCell align=\"center\">{form.shift.firstName}</TableCell>\r\n\r\n                <TableCell align=\"center\">\r\n                    L:{PL}, W:{PW}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\">\r\n                    L:{CL}, W:{CW}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\">{form.turtle.species ? form.turtle.species : \"-\"}</TableCell>\r\n                <TableCell align=\"center\">{gender}</TableCell>\r\n                <TableCell align=\"center\">{status}</TableCell>\r\n                <TableCell align=\"center\">{stage}</TableCell>\r\n\r\n                <TableCell align=\"center\"> {MR == \"-\" ? \"-\" :\r\n                    <Tooltip title={MR}>\r\n                        <div>\r\n                            {MR.slice(0, 5) + \"...\"}\r\n                        </div>\r\n\r\n                    </Tooltip>}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\"> {ML == \"-\" ? \"-\" :\r\n                    <Tooltip title={ML}>\r\n                        <div>\r\n                            {ML.slice(0, 5) + \"...\"}\r\n                        </div>\r\n\r\n                    </Tooltip>}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\"> {form.nest.layTime ? moment(form.nest.layTime).format(\"LT\") : \"-\"}</TableCell>\r\n                <TableCell align=\"center\">{form.nest.eggCount ? form.nest.eggCount : \"-\"}</TableCell>\r\n                <TableCell align=\"center\">{form.nest.hatchEst ? moment(form.nest.hatchEst).format(\"LT\") : \"-\"}</TableCell>\r\n                <TableCell align=\"center\">{rehomed}</TableCell>\r\n                <TableCell align=\"center\">{salvageable}</TableCell>\r\n\r\n                <TableCell align=\"center\">\r\n                    {form.observation.comments ? <Tooltip title={form.observation.comments}>\r\n                        <div>\r\n                            {form.observation.comments.slice(0, 5) + \"...\"}\r\n                        </div>\r\n                    </Tooltip> : \"-\"}\r\n                </TableCell>\r\n            </TableRow>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withTranslation('translation')(SpreadsheetContainer);","import React, { Component } from 'react';\r\nconst moment = require('moment')\r\n\r\nclass UpdateForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formId: props.form._id,\r\n            name: \"\",\r\n\r\n        }\r\n    }\r\n\r\n    closePopUp = () => {\r\n        this.props.closePopUp()\r\n    }\r\n\r\n    // update = (event) => {\r\n    //     let item = event.target\r\n    //     this.setState({\r\n    //         name: item\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n\r\n        let shift = this.props.form.shift\r\n        let turtle = this.props.form.turtle\r\n        // let observation = this.props.form.observation\r\n        // let nest = this.props.form.nest\r\n\r\n        return (\r\n            <div className=\"popUp\">\r\n                ID: <input type=\"text\" placeholder={this.props.form._id} name=\"name\" value={this.state.formId} onChange={this.update} />\r\n                <div id=\"shift\">\r\n                    <h5>{moment(shift.date).format(\"Do/MM/YY\")}</h5>\r\n                    <h4>{shift.firstName} {shift.lastName}</h4>\r\n                </div>\r\n                <div id=\"turtle\">\r\n                    <div id=\"plain\">\r\n                       Plain: {turtle.dimensions.plain.length}, {turtle.dimensions.plain.width}\r\n                    </div>\r\n                    <div id=\"curve\">\r\n                        Curve: {turtle.dimensions.curve.length}, {turtle.dimensions.curve.width}\r\n                    </div>\r\n                    <p>Species: {turtle.species}</p>\r\n                    <p>Gender: {turtle.gender} </p>\r\n                    <p> Status: {turtle.condition.status}</p>\r\n                    <p> Stage: {turtle.condition.stage}</p>\r\n                </div>\r\n\r\n\r\n                <button onClick={this.closePopUp}> Close </button>\r\n            </div>)\r\n\r\n    }\r\n}\r\n\r\nexport default UpdateForm;","import React, { Component } from 'react';\r\nimport '../styles/loader.css'\r\n\r\nclass Loader extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"turtle-wrapper\">\r\n                <section class=\"turtle-loader-container\">\r\n                    <div class=\"turtle-loaderhead\"></div>\r\n                    <div class=\"legs-01\"></div>\r\n                    <div class=\"legs-02\"></div>\r\n                    <div class=\"tail\"></div>\r\n                    <div class=\"shell\">\r\n                        <div></div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react';\r\nimport SpreadsheetContainer from './SpreadsheetContainer';\r\nimport UpdateForm from './UpdateForm';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport * as constant from '../Form/constant'\r\nimport './Spreadsheet.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Loader from '../Loader';\r\n\r\nconst axios = require('axios')\r\n\r\nconst dinamicRoute = (\r\n    window.location.host.includes(\"localhost\") ?\r\n        constant.LOCAL_GET : constant.PROD_GET\r\n)\r\n\r\n\r\n\r\n\r\nclass SpreadsheetData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            forms: [],\r\n            form: null,\r\n            filter: \"\",\r\n            showPopUp: null,\r\n            loadingData: true\r\n        }\r\n\r\n        // this.dinamicRoute = props.dinamicRoute \r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let data = await axios.get(`${dinamicRoute}/all-data`)\r\n\r\n        let forms = [...this.state.forms]\r\n        forms = data.data\r\n        \r\n        setTimeout(()=>{\r\n            this.setState({\r\n                forms,\r\n                loadingData: false\r\n            })\r\n        }, 1500)\r\n    }\r\n\r\n\r\n    getDataById = async (id) => {\r\n        let data = this.state.forms.find(f => {\r\n            return f._id === id\r\n        })\r\n        await this.setState({\r\n            form: data\r\n        })\r\n        return data\r\n    }\r\n\r\n    // searchHandler = (event) => {\r\n    //     this.setState({\r\n    //         filter: event.target.value\r\n    //     })\r\n    // }\r\n\r\n    closePopUp = () => {\r\n        this.setState({\r\n            showPopUp: null,\r\n            form: null\r\n        })\r\n    }\r\n\r\n    showPop = async (id) => {\r\n        let result = this.state.forms.find(f => {\r\n            return f._id === id\r\n        })\r\n        await this.setState({\r\n            showPopUp: id,\r\n            form: result\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        let forms = this.state.forms\r\n\r\n\r\n        return (\r\n            <div className=\"spreadSheet\">\r\n                {this.state.showPopUp ?\r\n                    <UpdateForm closePopUp={this.closePopUp} form={this.state.form} /> : null}\r\n\r\n                {this.state.loadingData ? <Loader /> : null}\r\n\r\n\r\n                <div className=\"forms\">\r\n                    <Paper>\r\n                        <Table stickyHeader >\r\n                            <TableHead style={{color:\"blue\"}} stroke=\"blue\" fill=\"red\" className=\"head\" >\r\n\r\n                                <TableRow  >\r\n                                    <TableCell >{t('Date')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Location')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('First Name')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Last Name')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Straight measurement')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Curve measurement')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Species')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Gender')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Found alive')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Condition & Stage')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Marks right side')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Marks left side')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Spawning time')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Number of eggs')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Hatching')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Relocated')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Salvageable')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Comments')}</TableCell>\r\n                                </TableRow >\r\n\r\n                            </TableHead>\r\n                            <TableBody >\r\n                                {forms.map(f => <SpreadsheetContainer form={f} key={f._id} showPop={this.showPop} closePopUp={this.closePopUp} />)}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Paper>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withTranslation('translation')(SpreadsheetData);","import React, { Component } from 'react';\r\nimport SpreadsheetData from './SpreadsheetData';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './Spreadsheet.css'\r\n// import SpreadsheetActions from './SpreadsheetActions';\r\n\r\n\r\n\r\nclass Spreadsheet extends Component {\r\n\r\n\r\n    render() { \r\n      if(!this.props.isLoggedIn()){return <Redirect to=\"/\"/>}\r\n\r\n        return ( \r\n          <div className= \"Spreadsheet\">\r\n            <SpreadsheetData />\r\n          </div>  \r\n         )\r\n    }\r\n}\r\n \r\nexport default Spreadsheet;","import React, { Component } from 'react';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nclass ChartFilters extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {}\r\n    }\r\n\r\n    removeEmptyFilters = (filters) => {\r\n        const names = Object.keys(filters)\r\n        for (let name of names) {\r\n            if (filters[name].length === 0) {\r\n                delete filters[name]\r\n            }\r\n        }\r\n    }\r\n\r\n    extractFilters = () => {\r\n        const species = [\"Cc\", \"Lo\", \"Cm\", \"Ei\", \"Dc\"]\r\n        const tides = [\"high\", \"high-to-low\", \"low\", \"low-to-high\"]\r\n        const genders = [\"male\", \"female\"]\r\n\r\n        const filters = { \"turtle.species\": [], \"observation.tide\": [], \"turtle.gender\": [] }\r\n\r\n        species.forEach(s => this.state[s] ? filters[\"turtle.species\"].push(s) : null)\r\n        tides.forEach(t => this.state[t] ? filters[\"observation.tide\"].push(t) : null)\r\n        genders.forEach(g => this.state[g] ? filters[\"turtle.gender\"].push(g) : null)\r\n\r\n        this.removeEmptyFilters(filters)\r\n        return filters\r\n    }\r\n\r\n    handleChange = async (e) => {\r\n        if (this.state[e.target.value]) {\r\n            await this.setState({ [e.target.name]: null })\r\n        }\r\n        else {\r\n            await this.setState({ [e.target.name]: e.target.value })\r\n        }\r\n\r\n        const filters = this.extractFilters()\r\n        this.props.getRelevantData(filters)\r\n    }\r\n\r\n    createCheckMark = info => {\r\n        return <FormControlLabel\r\n            control={\r\n                <Checkbox name={info.value}\r\n                    color={info.color} checked={this.state[info.value]}\r\n                    onChange={this.handleChange} value={info.value} />}\r\n            label={info.label}\r\n        />\r\n    }\r\n\r\n    getCheckMarks = (filter) => {\r\n        const green = \"primary\"\r\n        const blue = \"secondary\"\r\n        const pink = \"default\"\r\n\r\n        const filters = {\r\n            species: [\r\n                { label: \"Caretta Caretta\", value: \"Cc\", color: green },\r\n                { label: \"Lepidochelys Olivacea\", value: \"Lo\", color: green },\r\n                { label: \"Chelonia Mydas\", value: \"Cm\", color: green },\r\n                { label: \"Eretmochelys imbricata\", value: \"Ei\", color: green },\r\n                { label: \"Dermochelys coriacea\", value: \"Dc\", color: green }\r\n            ],\r\n            tides: [\r\n                { label: \"High\", value: \"high\", color: blue },\r\n                { label: \"High to Low\", value: \"high-to-low\", color: blue },\r\n                { label: \"Low\", value: \"low\", color: blue },\r\n                { label: \"Low to High\", value: \"low-to-high\", color: blue },\r\n            ],\r\n            gender: [\r\n                { label: \"Male\", value: \"male\", color: pink },\r\n                { label: \"Female\", value: \"female\", color: pink },\r\n            ]\r\n        }\r\n\r\n        const checkmarks = []\r\n\r\n        for (let info of filters[filter]) {\r\n            checkmarks.push(this.createCheckMark(info))\r\n        }\r\n\r\n        return checkmarks\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chart-filters\">\r\n                <span>Filters</span>\r\n                <div>\r\n                    {[\"species\", \"tides\", \"gender\"].map(filter => (\r\n                        <FormGroup row >\r\n                            <div className=\"filter-group\">\r\n                                <span>{filter.toUpperCase()}</span>\r\n                                <div className=\"chart-checkboxes\">{this.getCheckMarks(filter)}</div>\r\n                            </div>\r\n                        </FormGroup>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChartFilters;","import React, { Component } from 'react';\r\nimport { ComposedChart, Bar, XAxis, YAxis, ResponsiveContainer, Tooltip, Legend, Line } from 'recharts';\r\nimport moment from 'moment'\r\nimport Axios from 'axios';\r\nimport ChartFilters from './ChartFilters';\r\nimport '../../styles/analytics.css'\r\nimport * as constant from '../Form/constant'\r\nimport Loader from '../Loader';\r\n\r\nconst dinamicRoute = (\r\n    window.location.host.includes(\"localhost\") ?\r\n        constant.LOCAL_GET : constant.PROD_GET\r\n)\r\n\r\nclass DynamicChart extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            countBy: \"turtleCount\",\r\n            time: \"day\",\r\n        }\r\n        this.loadingData = true\r\n        this.dinamicRoute = props.dinamicRoute\r\n    }\r\n\r\n    convertDate = (date, group) => {\r\n        let fd\r\n        let newDate\r\n        if (group === \"day\") {\r\n            fd = date * (1000 * 60 * 60 * 24)\r\n            newDate = moment(fd).format(\"MMMM Do YYYY\")\r\n        } else if (group === \"month\") {\r\n            date = parseInt(date)\r\n            let addYear = Math.floor(date / 12)\r\n            let toMultiply = (date % 12) / 12\r\n            let year = 1970 + addYear\r\n            let month = (Math.ceil(toMultiply * 12)) + 1\r\n            newDate = month + \" \" + year\r\n        } else if (group === \"year\") {\r\n            newDate = JSON.parse(date) + 1970\r\n        } else if (group === \"week\") {\r\n            fd = date * (1000 * 60 * 60 * 24 * 7)\r\n            newDate = moment(fd).format('w YYYY')\r\n        }\r\n        return newDate\r\n    }\r\n\r\n    getRelevantData = async (filters) => {\r\n        if (!filters) { filters = {} }\r\n        const group = this.state.time\r\n        this.setState({ loadingData: true })\r\n        const response = await Axios.post(`${dinamicRoute}/formData/${group}`, filters)\r\n        setTimeout(() => { //for presentation only\r\n            this.setState({\r\n                data: response.data.map(d => {\r\n                    return { ...d, moonPhase: this.getMoonphases(d.moonPhase), date: this.convertDate(d.date, group) }\r\n                }), loadingData: false\r\n            })\r\n        }, 1500)\r\n    }\r\n    handleChange = async (e) => {\r\n        let data = [...this.state.data]\r\n        let name = e.target.name\r\n        let newData = data.splice(0) // Only for User Experience purposes (to force chart to reanimate)\r\n        await this.setState({ [name]: e.target.value, data: newData })\r\n        this.getRelevantData()\r\n    }\r\n\r\n    getMoonphases = (data) => {\r\n        let moonphase\r\n        if (data === \"Full Moon\") {\r\n            return moonphase = 4\r\n        } else if (data === \"Third Quarter\") {\r\n            return moonphase = 3\r\n        } else if (data === \"New Moon\") {\r\n            return moonphase = 2\r\n        } else if (data === \"First Quarter\") {\r\n            return moonphase = 1\r\n        } else {\r\n            return moonphase = null\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getRelevantData()\r\n    }\r\n\r\n    render() {\r\n        let countOptions = [\"turtleCount\", \"nestCount\", \"eggCount\"]\r\n        let timeOptions = [\"day\", \"week\", \"month\", \"year\"]\r\n        let notShowingMoonPhases\r\n\r\n        return (\r\n            <div className=\"analytics-page\">\r\n\r\n                <div className=\"analytics-area\" style={{ width: '100vw', height: '70%' }} >\r\n                    <h3>Count: </h3>\r\n                    <select className=\"a-select\" id=\"countBy\" name=\"countBy\" value={this.state.countBy} onChange={this.handleChange}>\r\n                        {countOptions.map(o => <option value={o}>{o}</option>)}\r\n                    </select>\r\n                    <select className=\"a-select\" id=\"time\" name=\"time\" value={this.state.time} onChange={this.handleChange}>\r\n                        {timeOptions.map(o => <option value={o}>{o}</option>)}\r\n                    </select>\r\n\r\n                    {this.state.loadingData ? <Loader /> : null}\r\n\r\n                    <ResponsiveContainer width=\"100%\">\r\n                        <ComposedChart width={600} height={300} data={this.state.data}\r\n                            margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n\r\n                            <XAxis dataKey=\"date\" stroke=\"black\" />\r\n                            <YAxis yAxisId=\"left\" orientation=\"left\" stroke=\"rgba(239, 221, 111)\" />\r\n                            {this.state.time === \"day\" ?\r\n                                <YAxis yAxisId=\"right\" orientation=\"right\" stroke=\"#81C14B\" />\r\n                                : notShowingMoonPhases = true\r\n                            }\r\n                            <Tooltip />\r\n                            <Legend color=\"#FFFFFF\" />\r\n                            <Bar yAxisId=\"left\" dataKey={this.state.countBy} fill=\"rgba(239, 221, 111, 0.8)\" />\r\n                            {this.state.time === \"day\" ?\r\n                                <Line strokeWidth={4} stroke=\"rgba(129, 193, 75, 0.7)\" type=\"monotone\" yAxisId=\"right\" dataKey=\"moonPhase\" fill=\"#82ca9d\" />\r\n\r\n                                : notShowingMoonPhases = true\r\n                            }\r\n                        </ComposedChart>\r\n                    </ResponsiveContainer>\r\n                </div>\r\n\r\n                <ChartFilters getRelevantData={this.getRelevantData} />\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DynamicChart;","import React, { Component } from 'react';\r\nimport DynamicChart from './DynamicChart';\r\nimport Chart from './Chart';\r\nimport CircleChart from './Doughnut';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Analytics extends Component {\r\n    \r\n    render() { \r\n        if(!this.props.isLoggedIn()){return <Redirect to=\"/\"/>}\r\n\r\n        return (  \r\n            <div className= \"analytics\">\r\n                <DynamicChart />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Analytics;","import React, { Component } from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nclass Chart extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n             chartData:{\r\n                labels: ['July','August', 'September', 'October', 'November', 'December'],\r\n                datasets: [\r\n                  {\r\n                    data: [65, 59, 80, 81, 56, 43, 72],\r\n                    label: \"Number of turtles\",\r\n                    backgroundColor: 'rgba(255,99,132,0.2)',\r\n                    borderColor: 'rgba(255,99,132,1)',\r\n                    borderWidth: 2,\r\n                    hoverBackgroundColor: 'rgba(255,99,132,0.8)',\r\n                    hoverBorderColor: 'rgba(255,99,132,1)'\r\n                  }\r\n                ]\r\n              }}}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chart\">\r\n                <Bar\r\n                    data={this.state.chartData}\r\n                    options={{ maintainAspectRatio: false }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chart\r\n","import React, { Component } from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nclass CircleChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {\r\n                labels: [\r\n                    'Rescued',\r\n                ],\r\n                datasets: [{\r\n                    data: [300],\r\n                    backgroundColor: [\r\n                    '#FF6384',\r\n                    '#36A2EB',\r\n                    '#FFCE56'\r\n                    ],\r\n                    hoverBackgroundColor: [\r\n                    '#FF6387',\r\n                    '#36A2EB',\r\n                    '#FFFFFF'\r\n                    ]\r\n                }]\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"doughnu\">\r\n                <Doughnut \r\n                        data={this.state.data}\r\n                        options={{ maintainAspectRatio: true }} \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CircleChart","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\r\nimport { withTranslation } from 'react-i18next';\r\nimport NavBar from './Components/NavBar';\r\nimport Login from './Components/Login';\r\nimport Landing from './Components/Landing';\r\nimport Form from './Components/Form/Form';\r\nimport Spreadsheet from './Components/Spreadsheet/Spreadsheet';\r\nimport Analytics from './Components/Analytics/Analytics';\r\nimport './App.css';\r\nimport * as constant from './Components/Form/constant'\r\nimport Loader from './Components/Loader';\r\nconst axios = require('axios')\r\nconst dinamicRoute = window.location.host.includes(\"localhost\") ? constant.LOCAL_GET : constant.PROD_GET\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      location: \"\",\r\n      userName: \"\",\r\n      lng: \"en\",\r\n      loadingData: true,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (navigator.onLine) {\r\n      let savedForms = JSON.parse(localStorage.getItem('savedForms') || \"[]\")\r\n\r\n      if (savedForms.length < 1) {\r\n        this.setState({ loadingData: false })\r\n        return\r\n      }\r\n\r\n      axios.post(`${dinamicRoute}/mega-forms`, savedForms).then((response) => {\r\n        localStorage.removeItem('savedForms')\r\n        console.log('Sent saved forms to DB')\r\n        this.setState({ loadingData: false })\r\n      })\r\n    }\r\n    else {\r\n      console.log('there isnt anything sooo...')\r\n      this.setState({ loadingData: false })\r\n    }\r\n  }\r\n\r\n  updateUser = (name) => {\r\n    this.setState({\r\n      userName: name\r\n    })\r\n  }\r\n  updateNavBar = (location) => {\r\n    this.setState({\r\n      location: location\r\n    })\r\n  }\r\n\r\n  changeLanguage = () => {\r\n    const { i18n } = this.props;\r\n    if (this.state.lng === \"en\") {\r\n\r\n      i18n.changeLanguage(\"es\");\r\n      return this.setState({ lng: \"es\" })\r\n    } else {\r\n      i18n.changeLanguage(\"en\")\r\n      return this.setState({ lng: \"en\" })\r\n    }\r\n  };\r\n\r\n  isLoggedIn = () => localStorage.getItem(\"isLoggedIn\") || this.state.userName\r\n\r\n  logOut = () => {\r\n    this.setState({\r\n      isLoggedIn: false,\r\n      userName: '',\r\n      lng: \"en\"\r\n    })\r\n    localStorage.removeItem('isLoggedIn')\r\n  }\r\n\r\n  render() {\r\n\r\n    return (<>\r\n      <div>\r\n\r\n        <BrowserRouter>\r\n\r\n          <NavBar location={this.state.location}\r\n            logOut={this.logOut}\r\n            name={this.state.userName}\r\n            updateNavBar={this.updateNavBar}\r\n            lng={this.state.lng}\r\n            changeLanguage={this.changeLanguage}>\r\n\r\n          </NavBar>\r\n\r\n          {this.state.loadingData ? <Loader /> : null}\r\n\r\n\r\n          <Route path=\"/\" exact render={() =>\r\n            (this.isLoggedIn() ?\r\n              <Redirect to=\"/home\" /> :\r\n              <Login updateUser={this.updateUser} />)}>\r\n          </Route>\r\n\r\n          <Route path=\"/home\" exact render={() =>\r\n            <Landing updateNavBar={this.updateNavBar} isLoggedIn={this.isLoggedIn} />}>\r\n          </Route>\r\n\r\n          <Route path=\"/form\" exact render={() =>\r\n            <Form updateNavBar={this.updateNavBar} isLoggedIn={this.isLoggedIn} saveForm={this.saveForm} />}>\r\n          </Route>\r\n\r\n          <Route path=\"/spread\" exact render={() =>\r\n            <Spreadsheet updateNavBar={this.updateNavBar} isLoggedIn={this.isLoggedIn} />}>\r\n          </Route>\r\n\r\n          <Route path=\"/analytics\" exact render={() =>\r\n            <Analytics updateNavBar={this.updateNavBar} isLoggedIn={this.isLoggedIn} />}>\r\n          </Route>\r\n\r\n        </BrowserRouter>\r\n\r\n      </div></>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default withTranslation('translation')(App);","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nconst resources = {\r\n    en: {\r\n        translation: {\r\n            \"Please Log in Below\": \"Please Log in Below\",\r\n            \"User Name\": \"User Name\",\r\n            \"Password\": \"Password\",\r\n            \"Login\": \"Login\",\r\n            \"Logout\": \"Logout\",\r\n            \"Home\": \"Home\",\r\n            \"Form\": \"Form\",\r\n            \"Spreadsheet\": \"Spreadsheet\",\r\n            \"Analytics\": \"Analytics\",\r\n            \"TORTUGA WATCH FORM\": \"TORTUGA WATCH FORM\",\r\n            \"Shift\": \"Shift\",\r\n            \"Observer First Name\": \"Observer First Name\",\r\n            \"Observer Last Name\": \"Observer Last Name\",\r\n            \"First Name\": \"First Name\",\r\n            \"Last Name\": \"Last Name\",\r\n            \"Date of watch\": \"Date of watch\",\r\n            \"Observation\": \"Observation\",\r\n            \"Time\": \"Time\",\r\n            \"Location\": \"Location\",\r\n            \"Comments\": \"Comments\",\r\n            \"Observation notes...\": \"Observation notes...\",\r\n            \"Turtle Information\": \"Turtle Information\",\r\n            \"Select Species\": \"Select Species\",\r\n            \"Gender\": \"Gender\",\r\n            \"Female\": \"Female\",\r\n            \"Measurements in cm\": \"Measurements in cm\",\r\n            \"Male\": \"Male\",\r\n            \"Found alive\": \"Found alive\",\r\n            \"Found dead\": \"Found dead\",\r\n            \"Condition & Stage\": \"Condition & Stage\",\r\n            \"Dimensions\": \"Dimensions\",\r\n            \"Straight measurement\": \"Straight measurement\",\r\n            \"Curve measurement\": \"Curve measurement\",\r\n            \"Length\": \"Length\",\r\n            \"Width\": \"Width\",\r\n            \"Marks on the shell on the shell\": \"Marks on the shell\",\r\n            \"Right Side\": \"Right side\",\r\n            \"Left Side\": \"Left side\",\r\n            \"Nest Information\":\"Nest Information\",\r\n            \" Submit Form\": \"Submit Form\",\r\n            \"Number of eggs\":\"Number of eggs\",\r\n            \"Estimated hatching time\":\"Estimated hatching time\",\r\n            \"Estimated laying time\":\"Estimated laying time\",\r\n            \"Taken to lab\":\"Taken to lab\",\r\n            \"Yes\":\"Yes\",\r\n            \"Add notes...\":\"Add notes...\",\r\n            \"Search\": \"Search\", \r\n            \"Beach\":\"Beach\",\r\n            \"Arenal beach\":\"Arenal beach\",\r\n            \"El Toro beach\":\"El Toro beach\",\r\n            \"Lagarto beach\":\"Lagarto beach\",\r\n            \"Create a new observation form.\":\"Create a new observation form.\",\r\n            \"Create form\":\"Create form\",\r\n            \"Archive\":\"Archive\",\r\n            \"Review all available observation forms.\":\"Review all available observation forms.\",\r\n            \"View data\":\"View data\",\r\n            \"Review data analytics and create charts.\":\"Review data analytics and create charts.\",\r\n            \"Analytics\":\"Analytics\",\r\n            \"View analytics\":\"View analytics\",\r\n            \"Date\":\"Date\",\r\n            \"Species\":\"Species\",\r\n            \"Gender\":\"Gender\",\r\n            \"Marks right side\":\"Marks right side\",\r\n            \"Marks left side\":\"Marks left side\",\r\n            \"Spawning time\":\"Spawning time\",\r\n            \"Hatching\":\"Hatching\",\r\n            \"Relocated\":\"Relocated\",\r\n            \"Salvageable\":\"Salvageable\",\r\n\r\n        }\r\n    },\r\n    es: {\r\n        translation: {\r\n            \"Please Log in Below\": \"Por favor inicie sesión\",\r\n            \"User Name\": \"Usuario\",\r\n            \"Password\": \"Contraseña\",\r\n            \"Login\": \"Ingresar\",\r\n            \"Logout\": \"Cerrar Sesión\",\r\n            \"Home\": \"Panel\",\r\n            \"Form\": \"Formulario\",\r\n            \"Spreadsheet\": \"Actualización\",\r\n            \"Analytics\": \"Analítica\",\r\n            \"TORTUGA WATCH FORM\": \"FORMULARIO DE AVISTAMIENTO DE TORTUGAS\",\r\n            \"Shift\": \"Turno\",\r\n            \"First Name\": \"Primer Nombre\",\r\n            \"Observer Last Name\": \"Apellido del observador\",\r\n            \"Last Name\": \"Apellido\",\r\n            \"Date of watch\": \"Fecha del avistamiento\",\r\n            \"Observation\": \"Observación\",\r\n            \"Time\": \"Hora\",\r\n            \"Location\": \"Ubicación\",\r\n            \"Comments\": \"Comentarios\",\r\n            \"Observation notes...\": \"Notas del avistamiento...\",\r\n            \"Turtle Information\": \"Información de la Tortuga\",\r\n            \"Select Species\": \"Seleccionar especie\",\r\n            \"Gender\": \"Género\",\r\n            \"Female\": \"Hembra\",\r\n            \"Male\": \"Macho\",\r\n            \"Found alive\": \"Encontrada viva\",\r\n            \"Found dead\": \"Encontrada muerta\",\r\n            \"Condition & Stage\": \"Condición & estado\",\r\n            \"Measurements in cm\": \"Medidas en cm\",\r\n            \"Straight measurement\": \"Medición recta\",\r\n            \"Curve measurement\": \"Medición curva\",\r\n            \"Length\": \"Largo\",\r\n            \"Width\": \"Ancho\",\r\n            \"Marks on the shell\": \"Marcas en el caparazón\",\r\n            \"Right Side\": \"Lado derecho\",\r\n            \"Left Side\": \"Lado izquierdo\",\r\n            \"Nest Information\": \"Información del Nido\",\r\n            \" Submit \": \" Enviar \",\r\n            \"Number of eggs\": \"Número de huevos\",\r\n            \"Estimated laying time\": \"Tiempo estimado de colocación\",\r\n            \"Estimated hatching time\": \"Tiempo estimado de eclosión\",\r\n            \"Taken to lab\": \"Llevado al laboratorio\",\r\n            \"Yes\": \"Si\",\r\n            \"Add notes...\": \"Agregar notas...\",\r\n            \"Search\": \"Búsqueda\",\r\n            \"Beach\":\"Playa\",\r\n            \"Arenal beach\":\"Playa Arenal\",\r\n            \"El Toro beach\":\"Playa El Toro\",\r\n            \"Lagarto beach\":\"Playa Lagarto\",\r\n            \"Observer First Name\":\"Nombre del observador\",\r\n            \"Create a new observation form.\":\"Crear un nuevo formulario.\",\r\n            \"Create form\":\"Nuevo formulario\",\r\n            \"Archive\":\"Archivo\",\r\n            \"Review all available observation forms.\":\"Revisar todos los formularios existentes.\",\r\n            \"View data\":\"Ver datos\",\r\n            \"Review data analytics and create charts.\":\"Revisar el análisis de datos y crear gráficas.\",\r\n            \"Analytics\":\"Análisis de datos\",\r\n            \"View analytics\":\"Ver el análisis de datos\",\r\n            \"Date\":\"Fecha\",\r\n            \"Species\":\"Especie\",\r\n            \"Gender\":\"Género\",\r\n            \"Marks right side\":\"Marcas lado der\",\r\n            \"Marks left side\":\"Marcas lado izq\",\r\n            \"Spawning time\":\"Tiempo de desove\",\r\n            \"Hatching\":\"Eclosión\",\r\n            \"Relocated\":\"Reubicados\",\r\n            \"Salvageable\":\"Salvables\",\r\n\r\n        }\r\n    }\r\n};\r\n\r\ni18n\r\n    .use(initReactI18next) // passes i18n down to react-i18next\r\n    .init({\r\n        resources,\r\n        lng: \"en\",\r\n\r\n        keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n        interpolation: {\r\n            escapeValue: false // react already safes from xss\r\n        },\r\n        fallbackOnEmpty: true\r\n    });\r\n\r\nexport default i18n;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from '../src/App';\r\nimport './i18n.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}