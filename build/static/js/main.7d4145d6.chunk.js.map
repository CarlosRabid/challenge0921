{"version":3,"sources":["Components/ToolbarMenuIcon.js","Components/ToolbarMenu.js","Components/NavBar.js","Components/CardLanding.js","Components/Landing.js","Components/Login.js","Components/Form/FieldLocations.js","Components/Form/ObservationComments.js","Components/Form/Form.js","Components/Form/constant.js","Components/Loader.js","App.js","i18n.js","serviceWorker.js","index.js"],"names":["ToolbarMenuIcon","props","handleMenu","event","setState","anchorEl","currentTarget","handleClose","state","bind","render","children","this","result","child","autoclose","push","onClick","key","classes","open","Boolean","className","buttonCollapse","IconButton","style","color","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","autoCloseChildren","React","Component","withStyles","theme","breakpoints","up","display","root","position","right","buttonBar","down","styles","menuButton","marginLeft","marginRight","useState","top","left","bottom","onLogout","logOut","side","toggleDrawer","type","AppBar","background","Drawer","list","role","onKeyDown","List","to","textDecoration","ListItem","button","ListItemIcon","ListItemText","primary","Divider","Toolbar","aria-label","Typography","variant","collapsed","MenuItem","Button","FormControlLabel","control","Switch","checked","lng","onChange","changeLanguage","label","useStyles","makeStyles","card","maxWidth","media","height","padding","CardLanding","Card","CardContent","gutterBottom","component","d","title","description","CardActions","link","size","Landing","user","users","t","isLoggedIn","dataLanding","map","withTranslation","credentials","Robert","Isabelle","Guest1","Guest2","Guest3","Login","handleChange","input","target","value","name","login","userName","password","rememberMe","localStorage","setItem","updateUser","alert","TextField","margin","Checkbox","FieldLocation","a","idx","fields","selectedField","handleFieldxInput","hideMenu","showMenu","locationLatitude","locationLongitude","Opt1","latitude","longitude","Opt2","Opt3","FormControl","InputLabel","htmlFor","selectedFIeld","Select","labelWidth","Comments","handleInput","handleComments","comments","placeholder","multiline","rowsMax","InputLabelProps","shrink","axios","require","dinamicRoute","window","location","host","includes","Form","submitNewForm","firstName","getItem","lastName","form","observation","navigator","onLine","post","response","console","log","savedForms","JSON","parse","stringify","handleExpandClick","showFpart","date","time","FieldLocations","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","backgroundColor","opacity","marginTop","Loader","class","App","updateNavBar","i18n","removeItem","loadingData","length","then","path","exact","saveForm","use","initReactI18next","init","resources","en","translation","es","keySeparator","interpolation","escapeValue","fallbackOnEmpty","isLocalhost","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7d4145d6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Menu } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\r\n\r\nconst styles = theme => ({\r\n  buttonCollapse: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\"\r\n    },\r\n    margin: \"10px\",\r\n    boxShadow: \"none\"\r\n  }\r\n});\r\n\r\nclass ToolbarMenuIcon extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      anchorEl: null\r\n    };\r\n    this.handleMenu = this.handleMenu.bind(this);\r\n  }\r\n  handleMenu = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n  autoCloseChildren(render) {\r\n    const children = this.props.children;\r\n    const result = [];\r\n    for (const child of children) {\r\n      if (child.props.autoclose) {\r\n        result.push(<div onClick={this.handleClose} key={child}>{child}</div>);\r\n      } else {\r\n        result.push(child);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { anchorEl } = this.state;\r\n    const open = Boolean(anchorEl);\r\n\r\n    return (\r\n      <div className={classes.buttonCollapse}>\r\n        <IconButton onClick={this.handleMenu}>\r\n          <ExitToApp style={{color: 'white'}}/>\r\n        </IconButton>\r\n        <Menu\r\n          id=\"menu-appbar\"\r\n          anchorEl={anchorEl}\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\"\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\"\r\n          }}\r\n          open={open}\r\n          onClose={this.handleClose}\r\n        >\r\n          {this.autoCloseChildren()}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(ToolbarMenuIcon);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport ToolbarMenuIcon from \"./ToolbarMenuIcon\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    position: \"absolute\",\r\n    right: 0\r\n  },\r\n  buttonBar: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\"\r\n    },\r\n    margin: \"10px\",\r\n    paddingLeft: \"16px\",\r\n    right: 0,\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    background: \"transparent\"\r\n  }\r\n});\r\n\r\nconst ToolbarMenu = props => (\r\n  <div className={props.classes.root}>\r\n    <ToolbarMenuIcon>{props.render(true)}</ToolbarMenuIcon>\r\n    <div className={props.classes.buttonBar} id=\"toolbar\">\r\n      {props.render(false)}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default withStyles(styles)(ToolbarMenu);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ToolbarMenu from \"./ToolbarMenu\";\r\nimport { Button, MenuItem, List, ListItem, ListItemIcon, ListItemText, Divider, Drawer } from \"@material-ui/core\";\r\nimport { BrowserRouter as Router, Route, Redirect, Link } from 'react-router-dom'; //do NOT delete grayed out\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport PollIcon from '@material-ui/icons/Poll';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FormControlLabel, Switch } from '@material-ui/core';\r\nimport '../styles/NavBar.css';\r\n\r\n\r\nconst styles = {\r\n \r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  }\r\n};\r\n\r\n\r\n\r\nfunction NavBar(props) {\r\n  const classes = styles;\r\n  \r\n\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  function onLogout() {\r\n    props.logOut()\r\n  }\r\n\r\n\r\n  const sideList = side => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n\r\n        <Link to=\"/\" style={{ textDecoration: 'none', color: 'black' }}>\r\n          <ListItem button key=\"home\" >\r\n            <ListItemIcon ><HomeIcon /></ListItemIcon>\r\n            <ListItemText primary=\"Home\" />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <Link to=\"/form\" style={{ textDecoration: 'none', color: 'black' }}>\r\n          <ListItem button key=\"repo\" >\r\n            <ListItemIcon ><ListAltIcon /></ListItemIcon>\r\n            <ListItemText primary=\"Repo\" />\r\n          </ListItem>\r\n        </Link>\r\n\r\n      </List>\r\n\r\n      <Divider />\r\n\r\n    </div>\r\n  );\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    setState({ ...state, [side]: open });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" style={{ background: \"#166088\" }}>\r\n\r\n        <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\r\n          {sideList('left')}\r\n        </Drawer>\r\n        <Toolbar>\r\n\r\n          <IconButton color=\"inherit\" aria-label=\"Menu\" onClick={toggleDrawer('left', true)}>\r\n            <MenuIcon ></MenuIcon>\r\n          </IconButton>\r\n\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n           ''     Login Task Challenge 2021    ''\r\n          </Typography>\r\n\r\n         \r\n            <ToolbarMenu\r\n              render={collapsed => {\r\n                return collapsed\r\n                  ? [<MenuItem key=\"logout\" onClick={onLogout} autoclose={true}>\r\n                    Logout\r\n                    </MenuItem>]\r\n                  : [< Button\r\n                    key=\"logout\"\r\n                    color=\"inherit\"\r\n                    onClick={onLogout}\r\n                    className=\"menuButton\"\r\n                  >\r\n                    Logout\r\n                    </Button>];\r\n              }}\r\n\r\n            />\r\n            <div className=\"language-toggle\">\r\n            <FormControlLabel\r\n              control={<Switch checked={(props.lng === \"es\") ? true : false} onChange={props.changeLanguage} />}\r\n              label={(props.lng === \"es\") ? \"English\" : \"Español\"}\r\n            />\r\n            </div>\r\n\r\n        \r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/* Toolbar to add extra space after navbar */}\r\n      <Toolbar />\r\n    </div>\r\n  );\r\n}\r\n\r\nNavBar.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(NavBar);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './landing.css';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    button: {\r\n        padding: 8,\r\n    }\r\n});\r\n\r\nexport default function CardLanding(props) {\r\n    const classes = useStyles();\r\n    // const { t } = props;\r\n\r\n    return (\r\n        <div className=\"individualCardLanding\">\r\n\r\n            <Card className={classes.card}>\r\n            \r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {props.d.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {props.d.description}\r\n                    </Typography>\r\n                </CardContent>\r\n        \r\n                <CardActions>\r\n                    <Link to={props.d.link} style={{ textDecoration: 'none', color: 'black' }}><div className=\"landingButton\">\r\n                        <Button size=\"small\" color=\"default\" variant=\"outlined\">\r\n                            {props.d.button}\r\n                        </Button>\r\n                    </div>\r\n                    </Link>\r\n                </CardActions>\r\n\r\n            </Card>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom' //do not delete Router Route\r\nimport { withTranslation } from 'react-i18next';\r\nimport './landing.css'\r\nimport CardLanding from './CardLanding';\r\n\r\nclass Landing extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            user: {},\r\n            users: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props\r\n        if (!this.props.isLoggedIn()) { return <Redirect to=\"/\" /> }\r\n        let dataLanding = [\r\n            { title: t(\"Repositories\"), description: t(\"Repo details.\"), link: \"/form\" , button: t(\"Check Details\")}\r\n        ]\r\n        return (\r\n            <div className=\"landing-container\">\r\n                {dataLanding.map(d => <CardLanding d={d} key={d.link} />)}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withTranslation('translation')(Landing);","import React, { Component } from 'react';\r\nimport Landing from './Landing'; // do NOT delete!\r\nimport Card from '@material-ui/core/Card';\r\nimport './login.css'\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { FormControlLabel, Checkbox } from '@material-ui/core';\r\n\r\nlet credentials = {\r\n    Robert: \"TSDqmaPu\",\r\n    Isabelle: \"ngEyYWTp\",\r\n    Guest1: \"3fv9fZGL\",\r\n    Guest2: \"zwvY5Tjt\",\r\n    Guest3: \"wZXaHrxF\",\r\n}\r\n\r\nclass Login extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            userName: '',\r\n            password: '',\r\n            rememberMe: false,\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const input = event.target\r\n        const value = input.type === 'checkbox' ?\r\n            input.checked :\r\n            input.value;\r\n\r\n        this.setState({ [input.name]: value });\r\n    };\r\n\r\n    login = () => {\r\n        if (this.state.userName && credentials[this.state.userName] === this.state.password) {\r\n            if (this.state.rememberMe) {\r\n                localStorage.setItem('isLoggedIn', true);\r\n            }\r\n            this.props.updateUser(this.state.userName)\r\n        }\r\n        else {\r\n            alert('One of the following was not correct')\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Card className='logincontainer' style={{ maxWidth: 345 }}>\r\n                <CardContent className=\"loginInnerContainer\">\r\n                    <TextField id=\"outlined-name\" label=\"Username\" name=\"userName\" margin=\"normal\" variant=\"outlined\" type=\"string\" value={this.state.userName} onChange={this.handleChange} />\r\n                    <TextField id=\"outlined-name\" type=\"password\" name=\"password\" label=\"Password\" margin=\"normal\" variant=\"outlined\" value={this.state.password} onChange={this.handleChange} />\r\n                </CardContent>\r\n            \r\n                    <div className=\"cardActionsContainer\">\r\n                        <div><FormControlLabel\r\n                            control={<Checkbox value={this.state.rememberMe} checked={this.state.rememberMe} onChange={this.handleChange} color=\"default\" type=\"checkbox\" name=\"rememberMe\" />}\r\n                            label=\"Remember me\" />\r\n                        </div>\r\n                        <div>\r\n                            <button onClick={this.login} className = \"signinButton\"> LOGIN </button>\r\n                        </div>\r\n                    </div>\r\n            </Card>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Login\r\n","import React, { Component } from 'react';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport { withTranslation } from 'react-i18next';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport './form.css';\r\n\r\n\r\nclass FieldLocation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            locationLatitude: \"\",  // set-up by beach selection\r\n            locationLongitude: \"\", // set-up by beach selection\r\n            showMenu: false,\r\n            selectedField: \"\"\r\n        }\r\n\r\n        this.fields = {\r\n            Opt1: {\r\n                name: \"Playa El Toro\",\r\n                latitude: 7.530178,\r\n                longitude: -80.003034\r\n            },\r\n            Opt2: {\r\n                name: \"Playa El Arenal\",\r\n                latitude: 7.559493,\r\n                longitude: -80.019275\r\n            },\r\n            Opt3: {\r\n                name: \"Playa Lagarto\",\r\n                latitude: 7.506391,\r\n                longitude: -79.999284\r\n            }\r\n        }\r\n    }\r\n    handleClose = async (event) => {\r\n        let idx = event.target.value\r\n        if (idx) {\r\n            let currentField = this.fields[idx]\r\n            let selectedField = { ...this.state.selectedField }\r\n           await this.props.handleFieldxInput({ selectedField })\r\n            this.setState({\r\n                selectedField\r\n            })\r\n            this.hideMenu()\r\n        } else { return this.hideMenu() }\r\n    }\r\n    showMenu = () => {\r\n        this.setState({ showMenu: true })\r\n    }\r\n    hideMenu = async () => {\r\n        let showMenu = { ...this.state.showMenu }\r\n        showMenu = null\r\n        await this.setState({ showMenu })\r\n    }\r\n    render() {\r\n        const { t } = this.props;\r\n        return (\r\n            <>\r\n            <div id=\"menuplaya\">\r\n                    <FormControl variant=\"outlined\" value={this.state.selectedField}  >\r\n                        <InputLabel  style={{color:\"white\"}} \r\n                        htmlFor='menuplayascont' >   {this.state.selectedField ? \r\n                            this.state.selectedFIeld : t('Options') }  \r\n                        </InputLabel>\r\n                        <Select value={this.state.selectedField} labelWidth={60} \r\n                            // inputProps</FormControl>={{ name: 'playa', id: 'menuplayascont', }}\r\n                            onChange={this.handleClose} \r\n                            // color=\"white\"\r\n\r\n                            >\r\n                            <option value={null} > - </option>\r\n                            <option value=\"Opt1\" onClick={this.handleClose}>{t('Option 1')}</option>\r\n                            <option value=\"Opt2\" onClick={this.handleClose}>{t('Option 2')}</option>\r\n                            <option value=\"Opt3\" onClick={this.handleClose}>{t('Option 3')}</option>\r\n                        </Select>\r\n                    </FormControl>\r\n                    </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default withTranslation('translation')(FieldLocation);","import React, { Component } from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { TextField } from '@material-ui/core';\r\nimport './form.css'\r\n\r\nclass Comments extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            comments: \"\" //free input\r\n\r\n        }\r\n    }\r\n    handleInput = (event) => {\r\n        return this.props.handleComments(event.target.value)\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        return <div id=\"comments\">\r\n            {/* <Typography variant=\"h6\" component=\"h6\"></Typography> */}\r\n            <TextField\r\n                id=\"commentaries\"\r\n                name=\"comments\"\r\n                label={t('Comments')}\r\n                style={{ marginLeft: '1vw', color: 'white' }}\r\n                placeholder={t('Add notes...')}\r\n                // helperText=\"Full width!\"\r\n                multiline\r\n                rowsMax=\"2\"\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                    style: {\r\n                        color: 'white'\r\n                    }\r\n                }}\r\n                variant=\"outlined\"\r\n                onChange={this.handleInput}\r\n                color='#ffffff'\r\n            />\r\n\r\n        </div>\r\n    }\r\n}\r\nexport default withTranslation('translation')(Comments);","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport './form.css';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { Typography } from '@material-ui/core';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport FieldLocations from './FieldLocations';\r\nimport Comments from './ObservationComments';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as constant from './constant'\r\n\r\nconst axios = require('axios');\r\n\r\nconst dinamicRoute = (\r\n    window.location.host.includes(\"localhost\") ?\r\n        constant.LOCAL_GET : constant.PROD_GET\r\n)\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            locationLatitude: \"\",  // set-up by beach selection\r\n            locationLongitude: \"\", // set-up by beach selection\r\n            selectedField: \"\",\r\n            firstName: null,\r\n            lastName: null,\r\n            date: null,\r\n            time: \"\",\r\n            comments: \"\"\r\n        }\r\n    }\r\n\r\n    handleFieldxInput = async (input) => {\r\n        let selectedField = { ...this.state.selectedField }\r\n        selectedField = input.selectedField\r\n        await this.setState({  selectedField })\r\n    }\r\n\r\n    handleComments = (input) => {\r\n        let comments = { ...this.state.comments }\r\n        comments = input\r\n        this.setState({\r\n            comments\r\n        })\r\n    }\r\n\r\n    submitNewForm = async (comments) => {\r\n\r\n\r\n        const firstName = this.state.firstName || localStorage.getItem(\"firstName\")\r\n        const lastName = this.state.lastName || localStorage.getItem(\"lastName\")\r\n\r\n\r\n        let form = {\r\n            observation:\r\n            {\r\n                comments: this.state.comments\r\n            }\r\n        }\r\n        if(navigator.onLine) {\r\n            const response = await axios.post(`${dinamicRoute}/mega-form`,  form )\r\n            console.log(response)\r\n            console.log('new information saved!')\r\n            alert('Successfully submitted')\r\n        }\r\n        else {\r\n            let savedForms = JSON.parse(localStorage.getItem(\"savedForms\") || \"[]\")\r\n            savedForms.push(form)\r\n            localStorage.setItem('savedForms', JSON.stringify(savedForms))\r\n            console.log(\"Saved form locally for later post\")\r\n            alert('Cannot submit, will try again later')\r\n        }\r\n    }\r\n\r\n    handleExpandClick = (event) => {\r\n        let showFpart = true\r\n        this.setState({ showFpart: showFpart })\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n\r\n        if (!this.props.isLoggedIn()) { return <Redirect to=\"/\" /> }\r\n\r\n        return (\r\n\r\n            <div id=\"formContainer\" >\r\n                <h1>{t('Repository Detailed Information')}</h1>\r\n                <div id=\"beachButton\" >\r\n                    <FieldLocations handleFieldxInput={this.handleFieldxInput} />\r\n                </div>\r\n                <br />\r\n                <ExpansionPanel  className=\"shift\" >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"shift\"\r\n                    // style={{border: '10px'}}\r\n\r\n                    >\r\n                        <div className=\"helptext\">\r\n                            <Typography className=\"Shift\" variant=\"h6\" component=\"h6\">{t('Shift')}</Typography>\r\n                        </div>\r\n                    </ExpansionPanelSummary>\r\n                    {/* <ShiftInput forms={this.state.forms} handleName={this.handleName} handleDate={this.handleDate} />\r\n                    <br />\r\n                </ExpansionPanel>\r\n                <ExpansionPanel TransitionProps={{ unmountOnExit: true }}>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"turtles\"\r\n                    >\r\n                        <div className=\"helptext\">\r\n                            <Typography className=\"turtles\" variant=\"h6\" component=\"h6\">{t('Turtle Information')}</Typography>\r\n                        </div>\r\n                    </ExpansionPanelSummary>\r\n                    <Turtle handleGender={this.handleGender} handleCondition={this.handleCondition} handleSpecies={this.handleSpecies} forms={this.state.forms} handleTurtInput={this.state.handleTurtInput}\r\n                        handleDimentions={this.handleDimentions} />\r\n                </ExpansionPanel>\r\n                <ExpansionPanel TransitionProps={{ unmountOnExit: true }}>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"turtles\"\r\n                    >\r\n                        <div className=\"helptext\">\r\n                            <Typography className=\"nests\" variant=\"h6\" component=\"h6\">{t('Nest Information')}</Typography>\r\n                        </div>\r\n                    </ExpansionPanelSummary>\r\n                    <NestInput forms={this.state.forms} handleNest={this.handleNest} /> */}\r\n                </ExpansionPanel> \r\n                <Comments handleComments={this.handleComments} />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{ backgroundColor: '#09bc8a', opacity: 0.9, marginLeft: '0.2em', marginTop: '0.1em' }}\r\n                    size=\"medium\"\r\n                    className=\"submit\"\r\n                    onClick={this.submitNewForm}\r\n                    margin=\"normal\"\r\n                >\r\n                    {t(' Submit ')}\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withTranslation('translation')(Form);","export const LOCAL_GET = 'http://localhost:7777'\r\nexport const PROD_GET = ''","import React, { Component } from 'react';\r\nimport '../styles/loader.css'\r\n\r\nclass Loader extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"turtle-wrapper\">\r\n                <section class=\"turtle-loader-container\">\r\n                    <div class=\"turtle-loaderhead\"></div>\r\n                    <div class=\"legs-01\"></div>\r\n                    <div class=\"legs-02\"></div>\r\n                    <div class=\"tail\"></div>\r\n                    <div class=\"shell\">\r\n                        <div></div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\r\nimport { withTranslation } from 'react-i18next';\r\nimport NavBar from './Components/NavBar';\r\nimport Login from './Components/Login';\r\nimport Landing from './Components/Landing';\r\nimport Form from './Components/Form/Form';\r\nimport './App.css';\r\nimport * as constant from './Components/Form/constant'\r\nimport Loader from './Components/Loader';\r\nconst axios = require('axios')\r\nconst dinamicRoute = window.location.host.includes(\"localhost\") ? constant.LOCAL_GET : constant.PROD_GET\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      location: \"\",\r\n      userName: \"\",\r\n      lng: \"en\",\r\n      loadingData: true,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (navigator.onLine) {\r\n      let savedForms = JSON.parse(localStorage.getItem('savedForms') || \"[]\")\r\n\r\n      if (savedForms.length < 1) {\r\n        this.setState({ loadingData: false })\r\n        return\r\n      }\r\n\r\n      axios.post(`${dinamicRoute}/mega-forms`, savedForms).then((response) => {\r\n        localStorage.removeItem('savedForms')\r\n        console.log('Sent saved forms to DB')\r\n        this.setState({ loadingData: false })\r\n      })\r\n    }\r\n    else {\r\n      console.log('there isnt anything sooo...')\r\n      this.setState({ loadingData: false })\r\n    }\r\n  }\r\n\r\n  updateUser = (name) => {\r\n    this.setState({\r\n      userName: name\r\n    })\r\n  }\r\n  updateNavBar = (location) => {\r\n    this.setState({\r\n      location: location\r\n    })\r\n  }\r\n\r\n  changeLanguage = () => {\r\n    const { i18n } = this.props;\r\n    if (this.state.lng === \"en\") {\r\n\r\n      i18n.changeLanguage(\"es\");\r\n      return this.setState({ lng: \"es\" })\r\n    } else {\r\n      i18n.changeLanguage(\"en\")\r\n      return this.setState({ lng: \"en\" })\r\n    }\r\n  };\r\n\r\n  isLoggedIn = () => localStorage.getItem(\"isLoggedIn\") || this.state.userName\r\n\r\n  logOut = () => {\r\n    this.setState({\r\n      isLoggedIn: false,\r\n      userName: '',\r\n      lng: \"en\"\r\n    })\r\n    localStorage.removeItem('isLoggedIn')\r\n  }\r\n\r\n  render() {\r\n\r\n    return (<>\r\n      <div>\r\n\r\n        <BrowserRouter>\r\n\r\n          <NavBar location={this.state.location}\r\n            logOut={this.logOut}\r\n            name={this.state.userName}\r\n            updateNavBar={this.updateNavBar}\r\n            lng={this.state.lng}\r\n            changeLanguage={this.changeLanguage}>\r\n\r\n          </NavBar>\r\n\r\n          {this.state.loadingData ? <Loader /> : null}\r\n\r\n\r\n          <Route path=\"/\" exact render={() =>\r\n            (this.isLoggedIn() ?\r\n              <Redirect to=\"/home\" /> :\r\n              <Login updateUser={this.updateUser} />)}>\r\n          </Route>\r\n\r\n          <Route path=\"/home\" exact render={() =>\r\n            <Landing updateNavBar={this.updateNavBar} isLoggedIn={this.isLoggedIn} />}>\r\n          </Route>\r\n\r\n          <Route path=\"/form\" exact render={() =>\r\n            <Form updateNavBar={this.updateNavBar} isLoggedIn={this.isLoggedIn} saveForm={this.saveForm} />}>\r\n          </Route>\r\n\r\n        </BrowserRouter>\r\n\r\n      </div></>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default withTranslation('translation')(App);","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nconst resources = {\r\n    en: {\r\n        translation: {\r\n            \"Please Log in Below\": \"Please Log in Below\",\r\n            \"User Name\": \"User Name\",\r\n            \"Password\": \"Password\",\r\n            \"Login\": \"Login\",\r\n            \"Logout\": \"Logout\",\r\n            \"Home\": \"Home\",\r\n            \"Form\": \"Form\",\r\n        }\r\n    },\r\n    es: {\r\n        translation: {\r\n            \"Please Log in Below\": \"Por favor inicie sesión\",\r\n            \"User Name\": \"Usuario\",\r\n            \"Password\": \"Contraseña\",\r\n            \"Login\": \"Ingresar\",\r\n            \"Logout\": \"Cerrar Sesión\",\r\n            \"Home\": \"Panel\",\r\n            \"Form\": \"Formulario\",\r\n        }\r\n    }\r\n};\r\n\r\ni18n\r\n    .use(initReactI18next) // passes i18n down to react-i18next\r\n    .init({\r\n        resources,\r\n        lng: \"en\",\r\n\r\n        keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n        interpolation: {\r\n            escapeValue: false // react already safes from xss\r\n        },\r\n        fallbackOnEmpty: true\r\n    });\r\n\r\nexport default i18n;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from '../src/App';\r\nimport './i18n.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}