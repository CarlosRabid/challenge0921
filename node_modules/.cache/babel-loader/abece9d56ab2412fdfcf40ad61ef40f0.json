{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corne\\\\Unsyncro\\\\WorkOfficeFREE\\\\CodingLab\\\\challenge0921\\\\src\\\\Components\\\\NavBar.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ToolbarMenu from \"./ToolbarMenu\";\nimport { Button, MenuItem, List, ListItem, ListItemIcon, ListItemText, Divider, Drawer } from \"@material-ui/core\";\nimport { BrowserRouter as Router, Route, Redirect, Link } from 'react-router-dom'; //do NOT delete grayed out\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControlLabel, Switch } from '@material-ui/core';\nimport '../styles/NavBar.css';\nconst styles = {\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  }\n};\n\nfunction NavBar(props) {\n  const classes = styles;\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n\n  function onLogout() {\n    props.logOut();\n  }\n\n  const sideList = side => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    onClick: toggleDrawer(side, false),\n    onKeyDown: toggleDrawer(side, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    style: {\n      textDecoration: 'none',\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HomeIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Link, {\n    to: \"/form\",\n    style: {\n      textDecoration: 'none',\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListAltIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Link, {\n    to: \"/spread\",\n    style: {\n      textDecoration: 'none',\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"spreadsheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StorageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 27\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Spreadsheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Link, {\n    to: \"/analytics\",\n    style: {\n      textDecoration: 'none',\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"analytics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PollIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 27\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Analytics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }));\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [side]: open\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    style: {\n      background: \"#166088\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    open: state.left,\n    onClose: toggleDrawer('left', false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, sideList('left')), /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"Menu\",\n    onClick: toggleDrawer('left', true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"Login Task Challenge 2021\"), /*#__PURE__*/React.createElement(ToolbarMenu, {\n    render: collapsed => {\n      return collapsed ? [/*#__PURE__*/React.createElement(MenuItem, {\n        key: \"logout\",\n        onClick: onLogout,\n        autoclose: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 22\n        }\n      }, \"Logout\")] : [/*#__PURE__*/React.createElement(Button, {\n        key: \"logout\",\n        color: \"inherit\",\n        onClick: onLogout,\n        className: \"menuButton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 22\n        }\n      }, \"Logout\")];\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"language-toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: props.lng === \"es\" ? true : false,\n      onChange: props.changeLanguage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 24\n      }\n    }),\n    label: props.lng === \"es\" ? \"English\" : \"Espa√±ol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }));\n}\n\nNavBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(NavBar);","map":{"version":3,"sources":["C:/Users/corne/Unsyncro/WorkOfficeFREE/CodingLab/challenge0921/src/Components/NavBar.js"],"names":["React","PropTypes","withStyles","AppBar","Toolbar","Typography","IconButton","MenuIcon","ToolbarMenu","Button","MenuItem","List","ListItem","ListItemIcon","ListItemText","Divider","Drawer","BrowserRouter","Router","Route","Redirect","Link","HomeIcon","ListAltIcon","StorageIcon","PollIcon","makeStyles","FormControlLabel","Switch","styles","menuButton","marginLeft","marginRight","NavBar","props","classes","state","setState","useState","top","left","bottom","right","onLogout","logOut","sideList","side","list","toggleDrawer","textDecoration","color","open","event","type","key","background","collapsed","lng","changeLanguage","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ToolbarMenu from \"./ToolbarMenu\";\r\nimport { Button, MenuItem, List, ListItem, ListItemIcon, ListItemText, Divider, Drawer } from \"@material-ui/core\";\r\nimport { BrowserRouter as Router, Route, Redirect, Link } from 'react-router-dom'; //do NOT delete grayed out\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport PollIcon from '@material-ui/icons/Poll';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FormControlLabel, Switch } from '@material-ui/core';\r\nimport '../styles/NavBar.css';\r\n\r\n\r\nconst styles = {\r\n \r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  }\r\n};\r\n\r\n\r\n\r\nfunction NavBar(props) {\r\n  const classes = styles;\r\n  \r\n\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  function onLogout() {\r\n    props.logOut()\r\n  }\r\n\r\n\r\n  const sideList = side => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n\r\n        <Link to=\"/\" style={{ textDecoration: 'none', color: 'black' }}>\r\n          <ListItem button key=\"home\" >\r\n            <ListItemIcon ><HomeIcon /></ListItemIcon>\r\n            <ListItemText primary=\"Home\" />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <Link to=\"/form\" style={{ textDecoration: 'none', color: 'black' }}>\r\n          <ListItem button key=\"form\" >\r\n            <ListItemIcon ><ListAltIcon /></ListItemIcon>\r\n            <ListItemText primary=\"Form\" />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <Link to=\"/spread\" style={{ textDecoration: 'none', color: 'black' }}>\r\n          <ListItem button key=\"spreadsheet\" >\r\n            <ListItemIcon><StorageIcon /> </ListItemIcon>\r\n            <ListItemText primary=\"Spreadsheet\" />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <Link to=\"/analytics\" style={{ textDecoration: 'none', color: 'black' }}>\r\n          <ListItem button key=\"analytics\" >\r\n            <ListItemIcon><PollIcon /> </ListItemIcon>\r\n            <ListItemText primary=\"Analytics\" />\r\n          </ListItem>\r\n        </Link>\r\n\r\n      </List>\r\n\r\n      <Divider />\r\n\r\n    </div>\r\n  );\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    setState({ ...state, [side]: open });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" style={{ background: \"#166088\" }}>\r\n\r\n        <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\r\n          {sideList('left')}\r\n        </Drawer>\r\n        <Toolbar>\r\n\r\n          <IconButton color=\"inherit\" aria-label=\"Menu\" onClick={toggleDrawer('left', true)}>\r\n            <MenuIcon ></MenuIcon>\r\n          </IconButton>\r\n\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Login Task Challenge 2021\r\n          </Typography>\r\n\r\n         \r\n            <ToolbarMenu\r\n              render={collapsed => {\r\n                return collapsed\r\n                  ? [<MenuItem key=\"logout\" onClick={onLogout} autoclose={true}>\r\n                    Logout\r\n                    </MenuItem>]\r\n                  : [< Button\r\n                    key=\"logout\"\r\n                    color=\"inherit\"\r\n                    onClick={onLogout}\r\n                    className=\"menuButton\"\r\n                  >\r\n                    Logout\r\n                    </Button>];\r\n              }}\r\n\r\n            />\r\n            <div className=\"language-toggle\">\r\n            <FormControlLabel\r\n              control={<Switch checked={(props.lng === \"es\") ? true : false} onChange={props.changeLanguage} />}\r\n              label={(props.lng === \"es\") ? \"English\" : \"Espa√±ol\"}\r\n            />\r\n            </div>\r\n\r\n        \r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/* Toolbar to add extra space after navbar */}\r\n      <Toolbar />\r\n    </div>\r\n  );\r\n}\r\n\r\nNavBar.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(NavBar);"]},"metadata":{},"sourceType":"module"}