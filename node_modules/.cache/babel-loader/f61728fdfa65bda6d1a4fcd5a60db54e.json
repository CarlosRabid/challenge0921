{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corne\\\\Unsyncro\\\\WorkOfficeFREE\\\\CodingLab\\\\challenge0921\\\\src\\\\Components\\\\Form\\\\TurtleInput.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { withTranslation } from 'react-i18next';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport '../Form/turtle.css';\nimport { Input, InputLabel, TextField } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeartbeat, faMedkit, faStar, faStarHalfAlt, faStarHalf, faGrinStars, faStarOfLife, faBan } from '@fortawesome/free-solid-svg-icons'; // import { green } from '@material-ui/core/colors';\n// import FormHelperText from '@material-ui/core/FormHelperText';\n// import FormControl from '@material-ui/core/FormControl';\n// import FormLabel from '@material-ui/core/FormLabel';\n// import RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\n// import RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\n// import FavoriteIcon from '@material-ui/icons/Favorite';\n// import HealingIcon from '@material-ui/icons/Healing';\n// import Icon from '@material-ui/core/Icon';\n\nclass TurtleInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n      this.props.handleDimentions(event.target.id, event.target.value);\n      let turtlestate = { ...this.state\n      };\n    };\n\n    this.addTurtleInput = () => {\n      this.props.addTurtleInput(this.state.species, this.state.gender, this.state.condition.status, this.state.condition.stage, this.state.dimensions.plain.length, this.state.dimensions.plain.width, this.state.dimensions.curve.length, this.state.dimensions.curve.width, this.state.markings.rightSide, this.state.markings.leftSide);\n    };\n\n    this.handleClick = event => {\n      let anchorEl = { ...this.state.anchorEl\n      };\n      anchorEl = event.currentTarget.id;\n      return this.setState({\n        anchorEl\n      });\n    };\n\n    this.handleMenu = event => {\n      let anchorStat = { ...this.state.anchorStat\n      };\n      anchorStat = event.currentTarget.id;\n      return this.setState({\n        anchorStat\n      });\n    };\n\n    this.handleClose = async event => {\n      // setAnchorEl(null);\n      // let anchorEl = {...this.state.anchorEl}\n      let result = { ...this.state.species\n      };\n      result = event.currentTarget.id;\n\n      if (result.length === 2) {\n        this.props.handleSpecies(result);\n        this.setState({\n          species: result,\n          anchorEl: null\n        });\n        return;\n      } else {\n        this.props.handleCondition({\n          result\n        });\n        return this.setState({\n          conditionstage: result,\n          anchorStat: null\n        });\n      }\n    };\n\n    this.handleButton = event => {\n      let selected = { ...this.state.selected\n      };\n      selected = event.currentTarget.id;\n      this.props.handleCondition(selected);\n      this.setState({\n        selected\n      });\n    };\n\n    this.handleRadioButton = event => {\n      let gender = { ...this.state.gender\n      };\n      gender = event.currentTarget.value;\n      this.props.handleGender(gender);\n      this.setState({\n        gender\n      });\n    };\n\n    this.state = {\n      anchorEl: null,\n      anchorStat: null,\n      selected: null,\n      species: \"\",\n      gender: null,\n      conditionstat: \"\",\n      conditionstage: \"\",\n      dimensionsPl: 0,\n      dimensionsPw: 0,\n      dimensionsCl: 0,\n      dimensionsCw: 0,\n      markingsRs: \"\",\n      markingsLs: \"\",\n      commentaries: \"\",\n      menuItems: [{\n        key: \"alive\",\n        caption: \"Alive\",\n        subMenuItems: [{\n          key: \"aliveh\",\n          caption: \"Alive Healthy\",\n          onClick: () => {}\n        }, {\n          key: \"alivei\",\n          caption: \"Alive Injured\",\n          onClick: () => {}\n        }]\n      }, {\n        key: \"death\",\n        caption: \"Death\",\n        subMenuItems: [{\n          key: \"death1\",\n          caption: \"Death Stage 1\",\n          onClick: () => {}\n        }, {\n          key: \"death2\",\n          caption: \"Death Stage 2\",\n          onClick: () => {}\n        }, {\n          key: \"death3\",\n          caption: \"Death Stage 3\",\n          onClick: () => {}\n        }, {\n          key: \"death4\",\n          caption: \"Death Stage 4\",\n          onClick: () => {}\n        }]\n      }]\n    };\n  }\n\n  // there is className = \"child-turtle\" for nested children to help with the CSS\n  render() {\n    const {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"turtle-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"medium\",\n      id: \"species\",\n      variant: \"outlined\",\n      color: \"inherit\",\n      className: \"observation\",\n      onClick: this.handleClick,\n      style: {\n        marginLeft: '16%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, this.state.species ? `Species: ${this.state.species}` : t('Select Species')), /*#__PURE__*/React.createElement(Menu, {\n      anchorEl: this.state.anchorEl,\n      keepMounted: true,\n      open: Boolean(this.state.anchorEl),\n      onClose: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      name: \"species\",\n      id: \"Cc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, \"Caretta caretta\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      name: \"species\",\n      id: \"Lo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, \"Lepidochelys olivacea\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      name: \"species\",\n      id: \"Cm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, \"Chelonia mydas\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      name: \"species\",\n      id: \"Ei\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, \"Eretmochelys imbricata\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      name: \"species\",\n      id: \"Dc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, \"Dermochelys coriacea\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(RadioGroup, {\n      row: true,\n      \"aria-label\": \"Gender\",\n      name: \"gender2\",\n      value: this.state.gender,\n      onChange: this.handleRadioButton,\n      style: {\n        justifyContent: 'center',\n        marginTop: '2%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      display: \"block\",\n      value: \"female\",\n      control: /*#__PURE__*/React.createElement(Radio, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 30\n        }\n      }),\n      label: t('Female') // labelPlacement=\"start\"\n      ,\n      id: \"female\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 182\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      display: \"block\",\n      value: \"male\",\n      control: /*#__PURE__*/React.createElement(Radio, {\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 34\n        }\n      }),\n      label: t('Male') // labelPlacement=\"start\"\n      ,\n      id: \"male\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, t('Found alive'), \" :\", /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n      value: this.state.selected,\n      exclusive: true,\n      onChange: this.handleButton,\n      \"aria-label\": \"Alive\",\n      style: {\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButton, {\n      id: \"alv1\",\n      value: \"alv1\",\n      \"aria-label\": \"Alive - Healthy\",\n      style: {\n        height: '6vh',\n        justifySelf: \"center\",\n        marginLeft: '51%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faHeartbeat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(ToggleButton, {\n      id: \"alv2\",\n      value: \"alv2\",\n      style: {\n        height: '6vh',\n        justifySelf: \"center\"\n      },\n      color: \"secondary\",\n      \"aria-label\": \"Alive - Injured\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faMedkit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }), t('Found dead'), \" :\", /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n      value: this.state.selected,\n      exclusive: true,\n      onChange: this.handleButton,\n      \"aria-label\": \"Deceased\",\n      style: {\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButton, {\n      id: \"dea1\",\n      value: \"dea1\",\n      \"aria-label\": \"death1\",\n      style: {\n        height: '6vh',\n        justifySelf: \"center\",\n        marginLeft: '16%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faStar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(ToggleButton, {\n      id: \"dea2\",\n      value: 'dea2',\n      style: {\n        height: '6vh',\n        justifySelf: \"center\"\n      },\n      color: \"secondary\",\n      \"aria-label\": \"death2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faStarHalfAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(ToggleButton, {\n      id: \"dea3\",\n      value: \"dea3\",\n      \"aria-label\": \"death3\",\n      style: {\n        height: '6vh',\n        justifySelf: \"center\"\n      },\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faStarHalf,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(ToggleButton, {\n      id: \"dea4\",\n      value: \"dea4\",\n      \"aria-label\": \"death4\",\n      style: {\n        height: '6vh',\n        justifySelf: \"center\"\n      },\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faStarOfLife,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(ToggleButton, {\n      id: \"dea5\",\n      value: \"dea5\",\n      \"aria-label\": \"death5\",\n      style: {\n        height: '6vh',\n        justifySelf: \"center\"\n      },\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faBan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }), t('Measurements in cm'), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dimensions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"turtle-dimensions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }\n    }, t('Straight measurement'), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      value: this.state.dimensionsPl,\n      onChange: this.handleInput,\n      label: t('Length'),\n      id: \"dimensionsPl\",\n      className: \"turtle\",\n      size: \"small\",\n      style: {\n        width: '33%',\n        marginLeft: '5%'\n      } // InputProps={{\n      //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\n      // }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      value: this.state.dimensionsPw,\n      onChange: this.handleInput,\n      label: t('Width'),\n      id: \"dimensionsPw\",\n      className: \"turtle\",\n      size: \"small\",\n      style: {\n        width: '33%',\n        marginLeft: '5%'\n      } // InputProps={{\n      //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\n      // }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"turtle-dimensions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }\n    }, t('Curve measurement'), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      value: this.state.dimensionsCl,\n      onChange: this.handleInput,\n      label: t('Length'),\n      id: \"dimensionsCl\",\n      className: \"turtle\",\n      size: \"small\",\n      style: {\n        width: '33%',\n        marginLeft: '4%'\n      } // InputProps={{\n      //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\n      // }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      value: this.state.dimensionsCw,\n      onChange: this.handleInput,\n      label: t('Width'),\n      id: \"dimensionsCw\",\n      className: \"turtle\",\n      size: \"small\",\n      style: {\n        width: '33%',\n        marginLeft: '4%'\n      } // InputProps={{\n      //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\n      // }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"markings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }\n    }, t('Marks on the shell'), /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"component-simple\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }\n    }, t('Right Side'), \": \"), /*#__PURE__*/React.createElement(Input, {\n      id: \"markingsRs\",\n      value: this.state.markingsRs,\n      onChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"component-simple\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 21\n      }\n    }, t('Left Side'), \": \"), /*#__PURE__*/React.createElement(Input, {\n      id: \"markingsLs\",\n      value: this.state.markingsLs,\n      onChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default withTranslation('translation')(TurtleInput);","map":{"version":3,"sources":["C:/Users/corne/Unsyncro/WorkOfficeFREE/CodingLab/challenge0921/src/Components/Form/TurtleInput.js"],"names":["React","Component","Button","withTranslation","Menu","MenuItem","Radio","RadioGroup","FormControlLabel","Input","InputLabel","TextField","Grid","ToggleButton","ToggleButtonGroup","FontAwesomeIcon","faHeartbeat","faMedkit","faStar","faStarHalfAlt","faStarHalf","faGrinStars","faStarOfLife","faBan","TurtleInput","constructor","props","handleInput","event","setState","target","id","value","handleDimentions","turtlestate","state","addTurtleInput","species","gender","condition","status","stage","dimensions","plain","length","width","curve","markings","rightSide","leftSide","handleClick","anchorEl","currentTarget","handleMenu","anchorStat","handleClose","result","handleSpecies","handleCondition","conditionstage","handleButton","selected","handleRadioButton","handleGender","conditionstat","dimensionsPl","dimensionsPw","dimensionsCl","dimensionsCw","markingsRs","markingsLs","commentaries","menuItems","key","caption","subMenuItems","onClick","render","t","marginLeft","Boolean","justifyContent","marginTop","height","justifySelf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport '../Form/turtle.css';\r\nimport { Input, InputLabel, TextField } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeartbeat, faMedkit, faStar, faStarHalfAlt, faStarHalf, faGrinStars, faStarOfLife, faBan } from '@fortawesome/free-solid-svg-icons'\r\n// import { green } from '@material-ui/core/colors';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\n// import FormControl from '@material-ui/core/FormControl';\r\n// import FormLabel from '@material-ui/core/FormLabel';\r\n// import RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\n// import RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import HealingIcon from '@material-ui/icons/Healing';\r\n// import Icon from '@material-ui/core/Icon';\r\n\r\n\r\n\r\nclass TurtleInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null,\r\n            anchorStat: null,\r\n            selected: null,\r\n            species: \"\",\r\n            gender: null,\r\n            conditionstat: \"\",\r\n            conditionstage: \"\",\r\n            dimensionsPl: 0,\r\n            dimensionsPw: 0,\r\n            dimensionsCl: 0,\r\n            dimensionsCw: 0,\r\n            markingsRs: \"\",\r\n            markingsLs: \"\",\r\n            commentaries: \"\",\r\n            menuItems: [\r\n                {\r\n                    key: \"alive\",\r\n                    caption: \"Alive\",\r\n                    subMenuItems: [\r\n                        {\r\n                            key: \"aliveh\",\r\n                            caption: \"Alive Healthy\",\r\n                            onClick: () => { }\r\n                        },\r\n                        {\r\n                            key: \"alivei\",\r\n                            caption: \"Alive Injured\",\r\n                            onClick: () => { }\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    key: \"death\",\r\n                    caption: \"Death\",\r\n                    subMenuItems: [\r\n                        {\r\n                            key: \"death1\",\r\n                            caption: \"Death Stage 1\",\r\n                            onClick: () => { }\r\n                        },\r\n                        {\r\n                            key: \"death2\",\r\n                            caption: \"Death Stage 2\",\r\n                            onClick: () => { }\r\n                        },\r\n                        {\r\n                            key: \"death3\",\r\n                            caption: \"Death Stage 3\",\r\n                            onClick: () => { }\r\n                        },\r\n                        {\r\n                            key: \"death4\",\r\n                            caption: \"Death Stage 4\",\r\n                            onClick: () => { }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleInput = (event) => {\r\n        this.setState({ [event.target.id]: event.target.value })\r\n        this.props.handleDimentions(event.target.id, event.target.value )\r\n        let turtlestate = { ...this.state }\r\n    }\r\n    addTurtleInput = () => {\r\n        this.props.addTurtleInput(this.state.species, this.state.gender,\r\n            this.state.condition.status, this.state.condition.stage,\r\n            this.state.dimensions.plain.length, this.state.dimensions.plain.width, this.state.dimensions.curve.length, this.state.dimensions.curve.width,\r\n            this.state.markings.rightSide, this.state.markings.leftSide)\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        let anchorEl = { ...this.state.anchorEl }\r\n        anchorEl = event.currentTarget.id\r\n        return this.setState({ anchorEl })\r\n    };\r\n    handleMenu = (event) => {\r\n        let anchorStat = { ...this.state.anchorStat }\r\n        anchorStat = event.currentTarget.id\r\n        return this.setState({ anchorStat })\r\n    };\r\n    handleClose = async (event) => {\r\n        // setAnchorEl(null);\r\n        // let anchorEl = {...this.state.anchorEl}\r\n        let result = { ...this.state.species }\r\n        result = event.currentTarget.id\r\n\r\n        if (result.length === 2) {\r\n           this.props.handleSpecies(result)\r\n            this.setState({ species: result, anchorEl: null })\r\n            return \r\n\r\n        } else { \r\n            this.props.handleCondition({result})\r\n            return this.setState({ conditionstage: result, anchorStat: null }) }\r\n    };\r\n    handleButton = (event) => {\r\n        let selected = { ...this.state.selected }\r\n        selected = event.currentTarget.id\r\n        this.props.handleCondition(selected)\r\n        this.setState({ selected })\r\n    };\r\n\r\n    handleRadioButton = event => {\r\n        let gender = { ...this.state.gender };\r\n        gender = event.currentTarget.value\r\n        this.props.handleGender(gender)\r\n        this.setState({ gender });\r\n    };\r\n\r\n\r\n    // there is className = \"child-turtle\" for nested children to help with the CSS\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n\r\n        return (\r\n            <div className=\"turtle-container\" >\r\n                <Button size=\"medium\" id=\"species\"\r\n                    variant=\"outlined\" color=\"inherit\"\r\n                    className=\"observation\" onClick={this.handleClick}\r\n                    style={{ marginLeft: '16%' }}\r\n                >\r\n                    {this.state.species ? `Species: ${this.state.species}` : t('Select Species')}\r\n                </Button>\r\n                <Menu\r\n                    anchorEl={this.state.anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(this.state.anchorEl)}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <MenuItem onClick={this.handleClose} name=\"species\" id=\"Cc\" >Caretta caretta</MenuItem>\r\n                    <MenuItem onClick={this.handleClose} name=\"species\" id=\"Lo\">Lepidochelys olivacea</MenuItem>\r\n                    <MenuItem onClick={this.handleClose} name=\"species\" id=\"Cm\">Chelonia mydas</MenuItem>\r\n                    <MenuItem onClick={this.handleClose} name=\"species\" id=\"Ei\">Eretmochelys imbricata</MenuItem>\r\n                    <MenuItem onClick={this.handleClose} name=\"species\" id=\"Dc\">Dermochelys coriacea</MenuItem>\r\n                </Menu>\r\n                <br />\r\n                <RadioGroup row aria-label=\"Gender\" name=\"gender2\" value={this.state.gender} onChange={this.handleRadioButton} style={{ justifyContent: 'center', marginTop: '2%' }}><FormControlLabel\r\n                    display=\"block\"\r\n                    value=\"female\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label= {t('Female')}\r\n                    // labelPlacement=\"start\"\r\n                    id=\"female\"\r\n                />\r\n                    <FormControlLabel\r\n                        display=\"block\"\r\n                        value=\"male\"\r\n                        control={<Radio color=\"secondary\" />}\r\n                        label={t('Male')}\r\n                        // labelPlacement=\"start\"\r\n                        id=\"male\"\r\n                    />\r\n                </RadioGroup>\r\n                <Grid item sm={12} md={6}>\r\n                    {t('Found alive')} :\r\n                    <ToggleButtonGroup\r\n                        value={this.state.selected}\r\n                        exclusive\r\n                        onChange={this.handleButton}\r\n                        aria-label=\"Alive\"\r\n                        style={{ justifyContent: \"center\" }}\r\n                    >\r\n                        <ToggleButton id=\"alv1\" value=\"alv1\" aria-label=\"Alive - Healthy\"\r\n                            style={{ height: '6vh', justifySelf: \"center\", marginLeft: '51%' }}>\r\n                            <FontAwesomeIcon icon={faHeartbeat} />\r\n                        </ToggleButton>\r\n                        <ToggleButton id=\"alv2\" value=\"alv2\" \r\n                        style={{ height: '6vh', justifySelf: \"center\" }} \r\n                        color=\"secondary\" aria-label=\"Alive - Injured\">\r\n                            <FontAwesomeIcon icon={faMedkit} />\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                    <br />\r\n                    {t('Found dead')} :\r\n                 <ToggleButtonGroup\r\n                        value={this.state.selected}\r\n                        exclusive\r\n                        onChange={this.handleButton}\r\n                        aria-label=\"Deceased\"\r\n                        style={{ justifyContent: \"center\" }}\r\n                    >\r\n                        <ToggleButton id=\"dea1\" value=\"dea1\" aria-label=\"death1\"\r\n                            style={{ height: '6vh', justifySelf: \"center\", marginLeft: '16%' }}\r\n                        >\r\n                            <FontAwesomeIcon icon={faStar} />\r\n                        </ToggleButton>\r\n                        <ToggleButton id=\"dea2\" value={'dea2'}\r\n                            style={{ height: '6vh', justifySelf: \"center\" }}\r\n                            color=\"secondary\" aria-label=\"death2\">\r\n                            <FontAwesomeIcon icon={faStarHalfAlt} />\r\n                        </ToggleButton>\r\n                        <ToggleButton id=\"dea3\" value='dea3' aria-label=\"death3\"\r\n                            style={{ height: '6vh', justifySelf: \"center\" }}\r\n                            color=\"secondary\"\r\n                        >\r\n                            <FontAwesomeIcon icon={faStarHalf} />\r\n                        </ToggleButton>\r\n                        <ToggleButton id=\"dea4\" value='dea4' aria-label=\"death4\"\r\n                            style={{ height: '6vh', justifySelf: \"center\" }}\r\n                            color=\"secondary\"\r\n                        >\r\n                            <FontAwesomeIcon icon={faStarOfLife} />\r\n                        </ToggleButton>\r\n                        <ToggleButton id=\"dea5\" value='dea5' aria-label=\"death5\"\r\n                            style={{ height: '6vh', justifySelf: \"center\" }}\r\n                            color=\"secondary\"\r\n                        >\r\n                            <FontAwesomeIcon icon={faBan} />\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </Grid>\r\n                \r\n                {/* <div className=\"child-turtle\">\r\n                                 <span className=\"new-turtle-1\"> Length: </span>\r\n                                 <Input\r\n                                 id=\"dimensionsPl\"\r\n                                 value={this.state.dimensionsPl}\r\n                                 onChange={this.handleInput}\r\n                                 endAdornment={<InputAdornment position=\"end\">mts</InputAdornment>}\r\n                                 aria-describedby=\"measure-helper-text\"\r\n                                 inputProps={{\r\n                                     'aria-label': 'measure',\r\n                                 }}\r\n                                 />\r\n                             </div>  */}\r\n                <br />\r\n                {t('Measurements in cm')}\r\n                <br />\r\n                <br />\r\n                <div className=\"dimensions\">\r\n                    <div className=\"turtle-dimensions\" >\r\n                        {t('Straight measurement')}\r\n                        <br />\r\n                        <TextField\r\n                            value={this.state.dimensionsPl}\r\n                            onChange={this.handleInput}\r\n                            label= {t('Length')}\r\n                            id=\"dimensionsPl\"\r\n                            className=\"turtle\"\r\n                            size=\"small\"\r\n                            style={{ width: '33%', marginLeft: '5%' }}\r\n                        // InputProps={{\r\n                        //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\r\n                        // }}\r\n                        />\r\n                        <TextField\r\n                            value={this.state.dimensionsPw}\r\n                            onChange={this.handleInput}\r\n                            label={t('Width')}\r\n                            id=\"dimensionsPw\"\r\n                            className=\"turtle\"\r\n                            size=\"small\"\r\n                            style={{ width: '33%', marginLeft: '5%' }}\r\n                        // InputProps={{\r\n                        //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\r\n                        // }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"turtle-dimensions\" >\r\n                    {t('Curve measurement')}\r\n                        <br />\r\n                        <TextField\r\n                            value={this.state.dimensionsCl}\r\n                            onChange={this.handleInput}\r\n                            label={t('Length')}\r\n                            id=\"dimensionsCl\"\r\n                            className=\"turtle\"\r\n                            size=\"small\"\r\n                            style={{ width: '33%', marginLeft: '4%' }}\r\n                        // InputProps={{\r\n                        //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\r\n                        // }}\r\n                        />\r\n                        <TextField\r\n                            value={this.state.dimensionsCw}\r\n                            onChange={this.handleInput}\r\n                            label={t('Width')}\r\n                            id=\"dimensionsCw\"\r\n                            className=\"turtle\"\r\n                            size=\"small\"\r\n                            style={{ width: '33%', marginLeft: '4%' }}\r\n                        // InputProps={{\r\n                        //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\r\n                        // }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"markings\">\r\n                {t('Marks on the shell')}\r\n                    <InputLabel htmlFor=\"component-simple\">{t('Right Side')}: </InputLabel>\r\n                    <Input id=\"markingsRs\" value={this.state.markingsRs} onChange={this.handleInput} />\r\n                    <InputLabel htmlFor=\"component-simple\">{t('Left Side')}: </InputLabel>\r\n                    <Input id=\"markingsLs\" value={this.state.markingsLs} onChange={this.handleInput} />\r\n                </div>\r\n                <br />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withTranslation('translation')(TurtleInput);"]},"metadata":{},"sourceType":"module"}