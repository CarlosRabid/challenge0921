{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\corne\\\\Unsyncro\\\\WorkOfficeFREE\\\\CodingLab\\\\challenge0921\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\corne\\\\Unsyncro\\\\WorkOfficeFREE\\\\CodingLab\\\\challenge0921\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\corne\\\\Unsyncro\\\\WorkOfficeFREE\\\\CodingLab\\\\challenge0921\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\corne\\\\Unsyncro\\\\WorkOfficeFREE\\\\CodingLab\\\\challenge0921\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import TurtleInput from'./TurtleInput';var Turtle=/*#__PURE__*/function(_Component){_inherits(Turtle,_Component);var _super=_createSuper(Turtle);function Turtle(props){var _this;_classCallCheck(this,Turtle);_this=_super.call(this,props);_this.updateTurtle=function(dms){// let state = {...this.state.turtleinput}\n_this.setState({turtleinput:dms});};_this.state={turtleinput:{},species:\"\",gender:null,conditionstat:\"\",conditionstage:\"\",dimensionsPl:0,dimensionsPw:0,dimensionsCl:0,dimensionsCw:0,markingsRs:\"\",markingsLs:\"\"// gender: \"\",\n// condition:\n// {\n//     status: \"\",\n//     stage: \"\"\n// },\n// dimensions: {\n//     plain: {\n//         length: \"\",\n//         width: \"\"\n//     },\n//     curve: {\n//         length: \"\",\n//         width: \"\"\n//     }\n// },\n// markings: {\n//     rightSide: \"\",\n//     leftSide: \"\"\n// }\n};return _this;}_createClass(Turtle,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(TurtleInput,{handleGender:this.props.handleGender,handleCondition:this.props.handleCondition,handleSpecies:this.props.handleSpecies,updateTurtle:this.updateTurtle,handleDimentions:this.props.handleDimentions});}}]);return Turtle;}(Component);export default Turtle;","map":{"version":3,"sources":["C:/Users/corne/Unsyncro/WorkOfficeFREE/CodingLab/challenge0921/src/Components/Form/Turtle.js"],"names":["React","Component","TurtleInput","Turtle","props","updateTurtle","dms","setState","turtleinput","state","species","gender","conditionstat","conditionstage","dimensionsPl","dimensionsPw","dimensionsCl","dimensionsCw","markingsRs","markingsLs","handleGender","handleCondition","handleSpecies","handleDimentions"],"mappings":"gvBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,C,GAEMC,CAAAA,M,gGACF,gBAAYC,KAAZ,CAAmB,wCACf,uBAAMA,KAAN,EADe,MAoCnBC,YApCmB,CAoCJ,SAACC,GAAD,CAAS,CACpB;AACA,MAAKC,QAAL,CAAc,CAACC,WAAW,CAAEF,GAAd,CAAd,EACH,CAvCkB,CAEf,MAAKG,KAAL,CAAa,CACTD,WAAW,CAAE,EADJ,CAETE,OAAO,CAAE,EAFA,CAGTC,MAAM,CAAE,IAHC,CAITC,aAAa,CAAE,EAJN,CAKTC,cAAc,CAAE,EALP,CAMTC,YAAY,CAAE,CANL,CAOTC,YAAY,CAAE,CAPL,CAQTC,YAAY,CAAE,CARL,CASTC,YAAY,CAAE,CATL,CAUTC,UAAU,CAAE,EAVH,CAWTC,UAAU,CAAE,EACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BS,CAAb,CAFe,aAmClB,C,yCAOD,iBAAS,CACL,mBACI,oBAAC,WAAD,EAAa,YAAY,CAAE,KAAKf,KAAL,CAAWgB,YAAtC,CAAoD,eAAe,CAAE,KAAKhB,KAAL,CAAWiB,eAAhF,CAAiG,aAAa,CAAE,KAAKjB,KAAL,CAAWkB,aAA3H,CAA0I,YAAY,CAAE,KAAKjB,YAA7J,CACA,gBAAgB,CAAG,KAAKD,KAAL,CAAWmB,gBAD9B,EADJ,CAIH,C,oBAhDgBtB,S,EAmDrB,cAAeE,CAAAA,MAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport TurtleInput from './TurtleInput';\r\n\r\nclass Turtle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            turtleinput: {},\r\n            species: \"\",\r\n            gender: null,\r\n            conditionstat: \"\",\r\n            conditionstage: \"\",\r\n            dimensionsPl: 0,\r\n            dimensionsPw: 0,\r\n            dimensionsCl: 0,\r\n            dimensionsCw: 0,\r\n            markingsRs: \"\",\r\n            markingsLs: \"\",\r\n            // gender: \"\",\r\n            // condition:\r\n            // {\r\n            //     status: \"\",\r\n            //     stage: \"\"\r\n            // },\r\n            // dimensions: {\r\n            //     plain: {\r\n            //         length: \"\",\r\n            //         width: \"\"\r\n            //     },\r\n            //     curve: {\r\n            //         length: \"\",\r\n            //         width: \"\"\r\n            //     }\r\n            // },\r\n            // markings: {\r\n            //     rightSide: \"\",\r\n            //     leftSide: \"\"\r\n            // }\r\n        }\r\n    }\r\n    updateTurtle = (dms) => {\r\n        // let state = {...this.state.turtleinput}\r\n        this.setState({turtleinput: dms })\r\n    }\r\n\r\n\r\n    render() { \r\n        return (\r\n            <TurtleInput handleGender={this.props.handleGender} handleCondition={this.props.handleCondition} handleSpecies={this.props.handleSpecies} updateTurtle={this.updateTurtle} \r\n            handleDimentions= {this.props.handleDimentions}/>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Turtle;"]},"metadata":{},"sourceType":"module"}