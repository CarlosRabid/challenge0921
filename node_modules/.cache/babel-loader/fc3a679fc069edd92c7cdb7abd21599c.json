{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corne\\\\Unsyncro\\\\WorkOfficeFREE\\\\CodingLab\\\\challenge0921\\\\src\\\\Components\\\\Spreadsheet\\\\SpreadsheetData.js\";\nimport React, { Component } from 'react';\nimport SpreadsheetContainer from './SpreadsheetContainer';\nimport UpdateForm from './UpdateForm';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport * as constant from '../Form/constant';\nimport './Spreadsheet.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withTranslation } from 'react-i18next';\nimport Loader from '../Loader';\n\nconst axios = require('axios');\n\nconst dinamicRoute = window.location.host.includes(\"localhost\") ? constant.LOCAL_GET : constant.PROD_GET;\n\nclass SpreadsheetData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getDataById = async id => {\n      let data = this.state.forms.find(f => {\n        return f._id === id;\n      });\n      await this.setState({\n        form: data\n      });\n      return data;\n    };\n\n    this.closePopUp = () => {\n      this.setState({\n        showPopUp: null,\n        form: null\n      });\n    };\n\n    this.showPop = async id => {\n      let result = this.state.forms.find(f => {\n        return f._id === id;\n      });\n      await this.setState({\n        showPopUp: id,\n        form: result\n      });\n    };\n\n    this.state = {\n      forms: [],\n      form: null,\n      filter: \"\",\n      showPopUp: null,\n      loadingData: true\n    }; // this.dinamicRoute = props.dinamicRoute \n  }\n\n  async componentDidMount() {\n    let data = await axios.get(`${dinamicRoute}/all-data`);\n    let forms = [...this.state.forms];\n    forms = data.data;\n    setTimeout(() => {\n      this.setState({\n        forms,\n        loadingData: false\n      });\n    }, 1500);\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    let forms = this.state.forms;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spreadSheet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, this.state.showPopUp ? /*#__PURE__*/React.createElement(UpdateForm, {\n      closePopUp: this.closePopUp,\n      form: this.state.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }) : null, this.state.loadingData ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 43\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"forms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      stickyHeader: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      style: {\n        color: \"blue\"\n      },\n      stroke: \"blue\",\n      fill: \"red\",\n      className: \"head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    }, t('Date')), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }\n    }, t('Location')), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }\n    }, t('First Name')), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 37\n      }\n    }, t('Last Name')), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 37\n      }\n    }, t('Straight measurement')), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 37\n      }\n    }, t('Curve measurement')), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 37\n      }\n    }, t('Species')), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }, t('Gender')), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 37\n      }\n    }, t('Found alive')), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 37\n      }\n    }, t('Condition & Stage')), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 37\n      }\n    }, t('Marks right side')), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 37\n      }\n    }, t('Marks left side')), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    }, t('Spawning time')), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }, t('Number of eggs')), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 37\n      }\n    }, t('Hatching')), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }\n    }, t('Relocated')), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 37\n      }\n    }, t('Salvageable')), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 37\n      }\n    }, t('Comments')))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, forms.map(f => /*#__PURE__*/React.createElement(SpreadsheetContainer, {\n      form: f,\n      key: f._id,\n      showPop: this.showPop,\n      closePopUp: this.closePopUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 49\n      }\n    })))))));\n  }\n\n}\n\nexport default withTranslation('translation')(SpreadsheetData);","map":{"version":3,"sources":["C:/Users/corne/Unsyncro/WorkOfficeFREE/CodingLab/challenge0921/src/Components/Spreadsheet/SpreadsheetData.js"],"names":["React","Component","SpreadsheetContainer","UpdateForm","Paper","Table","TableBody","TableCell","TableHead","TableRow","constant","makeStyles","withTranslation","Loader","axios","require","dinamicRoute","window","location","host","includes","LOCAL_GET","PROD_GET","SpreadsheetData","constructor","props","getDataById","id","data","state","forms","find","f","_id","setState","form","closePopUp","showPopUp","showPop","result","filter","loadingData","componentDidMount","get","setTimeout","render","t","color","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport SpreadsheetContainer from './SpreadsheetContainer';\r\nimport UpdateForm from './UpdateForm';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport * as constant from '../Form/constant'\r\nimport './Spreadsheet.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Loader from '../Loader';\r\n\r\nconst axios = require('axios')\r\n\r\nconst dinamicRoute = (\r\n    window.location.host.includes(\"localhost\") ?\r\n        constant.LOCAL_GET : constant.PROD_GET\r\n)\r\n\r\n\r\n\r\n\r\nclass SpreadsheetData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            forms: [],\r\n            form: null,\r\n            filter: \"\",\r\n            showPopUp: null,\r\n            loadingData: true\r\n        }\r\n\r\n        // this.dinamicRoute = props.dinamicRoute \r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let data = await axios.get(`${dinamicRoute}/all-data`)\r\n\r\n        let forms = [...this.state.forms]\r\n        forms = data.data\r\n        \r\n        setTimeout(()=>{\r\n            this.setState({\r\n                forms,\r\n                loadingData: false\r\n            })\r\n        }, 1500)\r\n    }\r\n\r\n\r\n    getDataById = async (id) => {\r\n        let data = this.state.forms.find(f => {\r\n            return f._id === id\r\n        })\r\n        await this.setState({\r\n            form: data\r\n        })\r\n        return data\r\n    }\r\n\r\n    // searchHandler = (event) => {\r\n    //     this.setState({\r\n    //         filter: event.target.value\r\n    //     })\r\n    // }\r\n\r\n    closePopUp = () => {\r\n        this.setState({\r\n            showPopUp: null,\r\n            form: null\r\n        })\r\n    }\r\n\r\n    showPop = async (id) => {\r\n        let result = this.state.forms.find(f => {\r\n            return f._id === id\r\n        })\r\n        await this.setState({\r\n            showPopUp: id,\r\n            form: result\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        let forms = this.state.forms\r\n\r\n\r\n        return (\r\n            <div className=\"spreadSheet\">\r\n                {this.state.showPopUp ?\r\n                    <UpdateForm closePopUp={this.closePopUp} form={this.state.form} /> : null}\r\n\r\n                {this.state.loadingData ? <Loader /> : null}\r\n\r\n\r\n                <div className=\"forms\">\r\n                    <Paper>\r\n                        <Table stickyHeader >\r\n                            <TableHead style={{color:\"blue\"}} stroke=\"blue\" fill=\"red\" className=\"head\" >\r\n\r\n                                <TableRow  >\r\n                                    <TableCell >{t('Date')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Location')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('First Name')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Last Name')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Straight measurement')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Curve measurement')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Species')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Gender')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Found alive')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Condition & Stage')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Marks right side')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Marks left side')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Spawning time')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Number of eggs')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Hatching')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Relocated')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Salvageable')}</TableCell>\r\n                                    <TableCell align=\"center\">{t('Comments')}</TableCell>\r\n                                </TableRow >\r\n\r\n                            </TableHead>\r\n                            <TableBody >\r\n                                {forms.map(f => <SpreadsheetContainer form={f} key={f._id} showPop={this.showPop} closePopUp={this.closePopUp} />)}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Paper>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withTranslation('translation')(SpreadsheetData);"]},"metadata":{},"sourceType":"module"}