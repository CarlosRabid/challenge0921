{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corne\\\\Unsyncro\\\\WorkOfficeFREE\\\\CodingLab\\\\challenge0921\\\\src\\\\Components\\\\Form\\\\Turtle.js\";\nimport React, { Component } from 'react';\nimport TurtleInput from './TurtleInput';\n\nclass Turtle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateTurtle = dms => {\n      // let state = {...this.state.turtleinput}\n      this.setState({\n        turtleinput: dms\n      });\n    };\n\n    this.state = {\n      turtleinput: {},\n      species: \"\",\n      gender: null,\n      conditionstat: \"\",\n      conditionstage: \"\",\n      dimensionsPl: 0,\n      dimensionsPw: 0,\n      dimensionsCl: 0,\n      dimensionsCw: 0,\n      markingsRs: \"\",\n      markingsLs: \"\" // gender: \"\",\n      // condition:\n      // {\n      //     status: \"\",\n      //     stage: \"\"\n      // },\n      // dimensions: {\n      //     plain: {\n      //         length: \"\",\n      //         width: \"\"\n      //     },\n      //     curve: {\n      //         length: \"\",\n      //         width: \"\"\n      //     }\n      // },\n      // markings: {\n      //     rightSide: \"\",\n      //     leftSide: \"\"\n      // }\n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(TurtleInput, {\n      handleGender: this.props.handleGender,\n      handleCondition: this.props.handleCondition,\n      handleSpecies: this.props.handleSpecies,\n      updateTurtle: this.updateTurtle,\n      handleDimentions: this.props.handleDimentions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default Turtle;","map":{"version":3,"sources":["C:/Users/corne/Unsyncro/WorkOfficeFREE/CodingLab/challenge0921/src/Components/Form/Turtle.js"],"names":["React","Component","TurtleInput","Turtle","constructor","props","updateTurtle","dms","setState","turtleinput","state","species","gender","conditionstat","conditionstage","dimensionsPl","dimensionsPw","dimensionsCl","dimensionsCw","markingsRs","markingsLs","render","handleGender","handleCondition","handleSpecies","handleDimentions"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC3BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAoCnBC,YApCmB,GAoCHC,GAAD,IAAS;AACpB;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAEF;AAAd,OAAd;AACH,KAvCkB;;AAEf,SAAKG,KAAL,GAAa;AACTD,MAAAA,WAAW,EAAE,EADJ;AAETE,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,MAAM,EAAE,IAHC;AAITC,MAAAA,aAAa,EAAE,EAJN;AAKTC,MAAAA,cAAc,EAAE,EALP;AAMTC,MAAAA,YAAY,EAAE,CANL;AAOTC,MAAAA,YAAY,EAAE,CAPL;AAQTC,MAAAA,YAAY,EAAE,CARL;AASTC,MAAAA,YAAY,EAAE,CATL;AAUTC,MAAAA,UAAU,EAAE,EAVH;AAWTC,MAAAA,UAAU,EAAE,EAXH,CAYT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA/BS,KAAb;AAiCH;;AAODC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,WAAD;AAAa,MAAA,YAAY,EAAE,KAAKhB,KAAL,CAAWiB,YAAtC;AAAoD,MAAA,eAAe,EAAE,KAAKjB,KAAL,CAAWkB,eAAhF;AAAiG,MAAA,aAAa,EAAE,KAAKlB,KAAL,CAAWmB,aAA3H;AAA0I,MAAA,YAAY,EAAE,KAAKlB,YAA7J;AACA,MAAA,gBAAgB,EAAG,KAAKD,KAAL,CAAWoB,gBAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAIH;;AAhD0B;;AAmD/B,eAAetB,MAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport TurtleInput from './TurtleInput';\r\n\r\nclass Turtle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            turtleinput: {},\r\n            species: \"\",\r\n            gender: null,\r\n            conditionstat: \"\",\r\n            conditionstage: \"\",\r\n            dimensionsPl: 0,\r\n            dimensionsPw: 0,\r\n            dimensionsCl: 0,\r\n            dimensionsCw: 0,\r\n            markingsRs: \"\",\r\n            markingsLs: \"\",\r\n            // gender: \"\",\r\n            // condition:\r\n            // {\r\n            //     status: \"\",\r\n            //     stage: \"\"\r\n            // },\r\n            // dimensions: {\r\n            //     plain: {\r\n            //         length: \"\",\r\n            //         width: \"\"\r\n            //     },\r\n            //     curve: {\r\n            //         length: \"\",\r\n            //         width: \"\"\r\n            //     }\r\n            // },\r\n            // markings: {\r\n            //     rightSide: \"\",\r\n            //     leftSide: \"\"\r\n            // }\r\n        }\r\n    }\r\n    updateTurtle = (dms) => {\r\n        // let state = {...this.state.turtleinput}\r\n        this.setState({turtleinput: dms })\r\n    }\r\n\r\n\r\n    render() { \r\n        return (\r\n            <TurtleInput handleGender={this.props.handleGender} handleCondition={this.props.handleCondition} handleSpecies={this.props.handleSpecies} updateTurtle={this.updateTurtle} \r\n            handleDimentions= {this.props.handleDimentions}/>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Turtle;"]},"metadata":{},"sourceType":"module"}